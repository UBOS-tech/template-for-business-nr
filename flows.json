[
    {
        "id": "11664d9b36ce1761",
        "type": "tab",
        "label": "Components",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a55a9493487fce9c",
        "type": "tab",
        "label": "Catalog",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "98062c101743e314",
        "type": "tab",
        "label": "Links",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9cd5b0a57706b2b1",
        "type": "tab",
        "label": "Auth Module",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "69a674d8a35c2ffc",
        "type": "tab",
        "label": "Category",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9266a34f77126904",
        "type": "tab",
        "label": "Warehouse",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23d2095ae5660c9d",
        "type": "tab",
        "label": "History",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "877f3370af549ead",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "Roles",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c6649f25b98199ac",
            "2c5a6545d4a6a298",
            "902b7b73986896ae",
            "958470e4e3e31d30",
            "2506c0dbe69fb78b",
            "7a0e28eabbd32d25",
            "1fb60e4dae692d5f",
            "8b2bcd5009f35afd",
            "205de08a3a01e939",
            "4be199881c3de4a5",
            "2453ab62cd2ad481",
            "691390390c02d345",
            "6444a894f849f11d",
            "c10b57db6735deb7",
            "4d7681305f3c53df",
            "33a81142b86d3c03",
            "8090e559c4712e08",
            "40aa2ee777849e51",
            "baf96cefd418fef2",
            "abe3dd07a7a56bda",
            "35d5f0bc0f3d258c",
            "d74150168a56ad22",
            "931a90379fad9b1a",
            "27a8ea20d0fc5edd",
            "e26733aca5535efe",
            "4cca743fbaac34f7",
            "9b90431ce34dc067",
            "1bd5dd699b5d7dd8",
            "41196ddd54635d7a",
            "c6bcb6ec5ee4459a",
            "dc75649716f8ef7e",
            "d7ef1036a6fbbb1a",
            "c3751494c93bdc9b",
            "008cb97aaa888bdc"
        ],
        "x": 14,
        "y": 1119
    },
    {
        "id": "bd54eb82c38ce9f8",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "Authorization",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3b68b8b69b9709dd",
            "0d4ef41b338a8127",
            "c6a51f2bf818e8b2",
            "a01684214d14423a",
            "fb09fa73c5abf4fd",
            "41a1b8d3e9728b5c",
            "a550385558f993f5",
            "c03749451e81740d",
            "9a7fa9e463be74ae",
            "80c3f5937053f5e8",
            "add2bce20664cd4e",
            "0ec6bfe111bc9fea",
            "0cac428de9fa885d",
            "797b8ee3904507ca",
            "987bed5ec72a59d1",
            "534b7b31cfc697c2",
            "9d7e28c68a36c77f",
            "df2045e89f351efa",
            "bb34e85be9dfdf2b",
            "82d1c248faf46157",
            "7ad1f18d8e656cb5",
            "20901ef99b84969c",
            "0579a61438826b1e",
            "efc9c2a875e3a58f",
            "c997befc2146715e",
            "9f7a94fe322d61c9",
            "dc67eda3cf39d7e5",
            "6b6f1ea8f9dd1add",
            "e0f8b6a14dfa2f72",
            "24d2090e08925fe9",
            "046f466ffe498dca",
            "44c20885dbc6d552",
            "24dedd4e462d71c8",
            "cf1c13ce610a9661",
            "e7e72f5949984b01",
            "4b1038e3fcd1b271",
            "45c3973be5c19ad4",
            "2eff455923b1d94a",
            "c62eadffe154e800",
            "ca5facb54a7e7671",
            "d75219ad87940b06",
            "2a0f62276d872e6f",
            "98d5ddb7a82e8f07",
            "5d59528c309ca45d",
            "063f03c2b0c56f2d",
            "b8a7b5f4d45c1443",
            "74447acc565d4dd5",
            "5183ac252096acc7",
            "b6b1dca1d5dcee76",
            "66a4fec1773766d1",
            "1864c6ccfea89c11",
            "a72443bdec0a7a3e",
            "0b5b76677edc256b",
            "3d894b4cdbf5a0a7",
            "41c35651fc40e756",
            "820841ffb5c5e797",
            "8b31dca641994169",
            "e93e2e0e14181be9",
            "acb942bcf42b27f9",
            "e1f9d7c545e406ec",
            "cbd1c2614c588e9a",
            "810e2858940505d9",
            "db9fc94fb29b93a0",
            "226c5cadebc441c7",
            "974f936d0aefc984",
            "d8df30c180dc09f6",
            "b23f2eb983d0775a",
            "896c08e71dd4c202",
            "4d18d71b734e1359",
            "94d4a342b505d9f1",
            "322ff37f58f4b0bb",
            "e1aa276151b836b3",
            "cb4b9a6f88d45121",
            "1e05c474cfc43cdb",
            "42b1e7124725fbdd"
        ],
        "x": 14,
        "y": 19
    },
    {
        "id": "98ed1097a5f070dd",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "Confirm Email Registration",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1573aa72594fb9d1",
            "81d3a60982bed479",
            "80f72d742cde74ab",
            "33b444400df726e4",
            "09a4715864b5adc7",
            "8eda245a8ccc7e8a",
            "0fcdf1045b75f1dd",
            "d32d4b12e57767d7",
            "d065be8fa3b5a3fd",
            "50012c12163687b7"
        ],
        "x": 774,
        "y": 1119
    },
    {
        "id": "dc9a848081703c6d",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "Reset Paaword",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "84e3d7890fb8f675",
            "9c2e58f24ebf9ac8",
            "354c95a549a6860f",
            "058cc733fbc835b1",
            "3eebaa9cfac30209",
            "af0dfff3165b19ca",
            "9eef3002c32b9d91",
            "9b448ee9048975e1",
            "ba556ebd17b12bca",
            "30b6dee89658a106",
            "0c12462407e342b8",
            "a2b078bff63fbf30",
            "8f52e194f069a57b",
            "34b63e4cb923cba6",
            "df878f590e8d63aa",
            "88ceedb4a9e511ef",
            "27acd6109b7abb58",
            "a1b02fcc79d40ee2",
            "63e09a2a5a85eb97",
            "61cc2ca6290c791b",
            "31bfcb0dee7f8219",
            "d39a499fb4f07204",
            "b98aad5c121b56ca",
            "3d7f4c4a497101db",
            "04b1dfc6c3223df0",
            "72a62512dcfc1c80",
            "c8bd5a0cd5413a4a",
            "841413557ac17222",
            "6716be78ab633ccf",
            "307c7741262993fe",
            "3412a8d7b1dda632",
            "97c1a790a19c4ef3",
            "e3c0bf980a4c9cd4",
            "269171f2f476c5e6",
            "83c5f5997506bf6e",
            "b4b76b4fa0d2a3ee",
            "a731e3fff05e7cb7",
            "88616445e8de6eac",
            "863c310e42e64f4f"
        ],
        "x": 774,
        "y": 1319
    },
    {
        "id": "e8e645803dc104cf",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "User Management",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b972cf20d8695cb1",
            "2cf5b996747deb47",
            "e1d422e6025d5a05",
            "ee75757cdfe678e1",
            "7e50a01b66f70791",
            "26f38d20e9e82347",
            "daa827fd6793b2ca",
            "72d31feadee44e28",
            "9af92418d9d4fee5",
            "28580fcf0f25cff8",
            "fef7bad230569363",
            "2902f61d750262b1",
            "a15aaf23babf5a47",
            "723a1b9981a3e1a1",
            "4ff18686a1acc663",
            "71163b37467b96b4",
            "d333f663dc6e9203",
            "88c7ee1514f4f898",
            "4488fbd58753d636",
            "235efa0bf6dfcfc9",
            "e3374fd359c59164",
            "861384fcb3fc5651",
            "f1499ed9ab81c0b8",
            "36ab33372c9a94b5",
            "6f463e1305003fae",
            "aefe1c6019acd5b5",
            "7c675c5ceb12c776",
            "15c82a2210a604cb",
            "75d81ccb277a2c65",
            "d9b821998a40c3e5"
        ],
        "x": 14,
        "y": 3019
    },
    {
        "id": "e40cd5b49cc158cd",
        "type": "group",
        "z": "9cd5b0a57706b2b1",
        "name": "Modules",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7d4115bbc11e8e91",
            "93e1be840ba83f2f",
            "43b5785a6442ae57",
            "3331eda74955f868",
            "e7d1b7bcbedaca50",
            "3612ef2c892d24da",
            "f18b21b78d10575c",
            "40da44c8a285ddb4",
            "4a8b7e2936b3d062",
            "35b0d99cc8eec61d",
            "8359fd262830dc38",
            "985f3366479cc0da",
            "16f1d13980c02cb3",
            "f49fe41610b77f0e",
            "e3dc35494c11cb67",
            "534189747b13bd28",
            "c2aff94f308d6626",
            "c2d03061f715f0f4",
            "68463d9d5ebe0d7e",
            "4adb2ae339ffb67a",
            "5b15a5ec79878165",
            "2093b3bd184454f2",
            "4689e18d0605acfb",
            "164237e8a3b112b4",
            "f7801baa63ad5466",
            "153ba7fd54ff4d26",
            "22d8ee141693692a",
            "a9244022229cb17a",
            "084580649fe5ecd0",
            "c394bcacc9b73e57",
            "d66b977ce5882f9d",
            "3a009ed63bba4b7b",
            "4c756ef0ead4504a",
            "0db1c7bf35954f09",
            "98f1682f6ed44382",
            "cbe0a9f5e6de7aa4",
            "3648a7422ea4a581",
            "1a9fe094cd5c3ea9",
            "f3501049bb0baefa",
            "6a904b384e8e2848",
            "4ba104a2bbef2a2f",
            "8685d6db8cb46830",
            "e8683d8140d00162"
        ],
        "x": 4,
        "y": 2059
    },
    {
        "id": "eb81c6a999181cf5",
        "type": "group",
        "z": "69a674d8a35c2ffc",
        "name": "Category page",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "52de254246596310",
            "e79674f19b77c282",
            "e0d56b2b33581a9b",
            "adc6ed0ac56c2e80",
            "89a056e68c47717b",
            "2db939b7ecb4e147",
            "b1a326bef6de85b0",
            "f533d787bab2758b",
            "e2cfa154f52adec1",
            "822ce0d907e8a47f",
            "e8784981902955ca",
            "5b06a4f669229aa4",
            "9c7f37851ae71f0a",
            "4258848c4e78d139",
            "bad66048564bc971",
            "58501c79db8bae62",
            "8fbdf4d21a51a4fb",
            "aa012bee322e7ed7",
            "ffbf097799d438d2",
            "3d130a34ed3601a6"
        ],
        "x": 14,
        "y": 79
    },
    {
        "id": "2f5a14ca37d690a8",
        "type": "group",
        "z": "a55a9493487fce9c",
        "name": "Catalog CRUD",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "4bd5fe3f1cfac16f",
            "dbcb7124ae4b4c0d",
            "a7fe2bc3f5777146",
            "930144a7723a32b9",
            "7f8c0f673ea5f32f",
            "d8214407fe6dd650",
            "60e0eb77d6fb71d8",
            "9452890379b2145b",
            "e7f58d79f83a1de2",
            "2ac8533ddeb794b1",
            "10cf815d26f2b122",
            "284a82ff71af1b9c",
            "477b4db43062b9c5",
            "9c79f79b0b6dcf6f",
            "cd5b375ec63ac403",
            "c8a015c05911e694",
            "0d37175fc198d22a",
            "7c8d6c5e2cc8a36f",
            "364ee6077636fcfa"
        ],
        "x": 14,
        "y": -1
    },
    {
        "id": "c9af0591a58bd161",
        "type": "group",
        "z": "a55a9493487fce9c",
        "name": "QR",
        "style": {
            "stroke": "#777777",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "133bc991784bfea5",
            "76842a23b216181a",
            "7c182f0d6cc280c6",
            "b76f5209d0d1dff9",
            "6cbd43eb6a2683f4",
            "b0f9094abf6ed52d",
            "5dcc60cb40c94caf",
            "9790a26d12e46637",
            "eb3243bf95fe872e",
            "367b3e72e19afc0f",
            "c284c35223b5703a",
            "8d262e5455203643",
            "901d88ae80e435e0",
            "0dc45d603b33612c",
            "330622fe2f0fdf7b",
            "378f266fba01cdb8",
            "7408b5aab9b40b65",
            "6a217787f607551c",
            "e552485cdaddee1a",
            "c0f42bb354f49b07",
            "e9707b4b8c2c3262",
            "016543c37cc9a690",
            "cf8c9e69640e49e3",
            "53ae1f01af686bd9"
        ],
        "x": 14,
        "y": 699
    },
    {
        "id": "b54200d9dea71783",
        "type": "group",
        "z": "a55a9493487fce9c",
        "name": "Actions page flows",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "b50308980d558d26",
            "bd6bc80adc5805cc",
            "3e7b078ee0a055a4",
            "8cf82ec0d25ea829",
            "2f7e206a7321f753",
            "73b487518ba26085",
            "566995aec9a20a73",
            "63dde80fa68145cb",
            "20315e15558d1dfc",
            "3694b644551e081c",
            "598b43fc8cce66e4",
            "094dbbde00e0f45e",
            "2eaefa4cac8171bb",
            "e5e276dcaa3f30e8",
            "08f7c52bc3d5fa79",
            "96dc0b0498cde4f7"
        ],
        "x": 14,
        "y": 439
    },
    {
        "id": "7555777c5ed85291",
        "type": "group",
        "z": "11664d9b36ce1761",
        "name": "Components page",
        "style": {
            "stroke": "#ffff00",
            "label": true
        },
        "nodes": [
            "a0a8ac24dd259796",
            "bb5e98450660a7a9",
            "90eadecb9994374e",
            "0c6e625f141206c4",
            "99bce7e4e33f7e44",
            "d4cbec27a1f23803",
            "c172c83f1277c29c",
            "cd6d6cb4a7066cfa",
            "b69506883b1408a7",
            "3107c78368bccd42",
            "8065fd3b184110fc",
            "ac866a86fe962b42",
            "5f7fa35a42aa45ea",
            "3260a99d06bcf81b",
            "5ee10184c6e5413c",
            "5fb55f6494028ddd",
            "740f066d6e6c3e7e",
            "1187cc57ac39ce82",
            "9303bfd82a0759e1",
            "a810d129ac755759",
            "f4405fe7a3c90e4c",
            "42cf77a40c8dd6ca",
            "b034956c37a0abcd",
            "b95e93b47bb0ed58",
            "ff80b4d1cf60dc5f",
            "7e3e862573e66aa7",
            "99e68f952823686b",
            "b4f5c558e44f7bc8",
            "b2bcfe8ae7b80ece",
            "ed7c5a7e4f4177ed",
            "d4ceba4ac0e8369a",
            "0954561947bd7763",
            "192afe569b18e9c3",
            "8e7b64c1e9b23ea2"
        ],
        "x": 54,
        "y": 59,
        "w": 1052,
        "h": 522
    },
    {
        "id": "8fda6c5c07a59438",
        "type": "group",
        "z": "11664d9b36ce1761",
        "name": "Box components",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "3190ec34ea513ffd",
            "642a1fde8eae0e24",
            "a704a1dd68a90507",
            "13a15a9c5366feb5",
            "32db51b5e872e5f8",
            "c031996b4c36795f",
            "f33796a3e8b18b76",
            "0bf14f0d03d32fbe",
            "e7e41220dfdf46fd",
            "3bdab4a27caa64af",
            "61562721130fd036",
            "4e5ae3d2a426859e",
            "673e9e7b85cab504",
            "88ac6af307a47559",
            "0703547ae3dbc05c"
        ],
        "x": 54,
        "y": 619,
        "w": 952,
        "h": 242
    },
    {
        "id": "a621f922ccda4904",
        "type": "group",
        "z": "9266a34f77126904",
        "name": "Warehouse page",
        "style": {
            "stroke": "#6f2fa0",
            "label": true
        },
        "nodes": [
            "9d05114a0cc8d2a0",
            "14b08350a0655bdc",
            "4ed95915529b8e62",
            "b7dbd9517728a90f",
            "b1b610ce5dac6ebb",
            "a8f2d921bc6af310",
            "cf7f02c0f6a9ae5c",
            "c6169e633ad1da51",
            "ccaf18ee79d25ed9",
            "7ec481cd3cd330fd",
            "0357496d780a01e3",
            "abf8e62e80bea95a",
            "60f59e84f560fd91",
            "187b95956d6c6195",
            "339f336b8643b2c4",
            "99919d690731809a",
            "cb4a12f1bd6bb31a",
            "2460c5e67f79f69c",
            "630fb596b6612380",
            "dbc6432e47eab8ae"
        ],
        "x": 14,
        "y": 99
    },
    {
        "id": "d2e221eb4b881ebc",
        "type": "group",
        "z": "23d2095ae5660c9d",
        "name": "History page",
        "style": {
            "stroke": "#92d04f",
            "label": true
        },
        "nodes": [
            "dee050e853d4f54a",
            "205856744efb25ca",
            "ffa29670689660e6",
            "d319c196ca6525f9",
            "215118a7957c6616",
            "471ba71e03281c58",
            "ddf051d7e9cc48d0",
            "aab7779b02aabf66",
            "719f14d1d2dca419",
            "e712401cbc6c3c22",
            "f722818c3f6f8fa7",
            "61efdc4a5f49e349",
            "2e5458beb81bcf57",
            "382a21ef309ef032",
            "636aec98e6017190",
            "6828054d74dc0133",
            "e194e8e72212011a",
            "1432a9b75376fe5f",
            "dc503760df85f511",
            "ba16f54773c01e6d",
            "d99f468a0d2cd988",
            "870721350ee6acb8",
            "fd7a6e50b798f526",
            "8a7ea9168c0d7023",
            "b296fdd39543419f",
            "4714a2ba2fbcfc52",
            "1fd8d77347ddad22",
            "5c7418115f28bd81",
            "702a61f1355c2bbe",
            "60841b65e7dfee98",
            "140662385ecd4ee5",
            "213eb5165695eb0e",
            "7b9f3823d106754b",
            "67e2e7aa8903d7a9",
            "dd8041a5224b1478",
            "4bcf6b1926d6d213",
            "f4bf7c1ef43c32b6",
            "314760e07b267ef2",
            "aca2aa51ba48c8b9",
            "7f76ad730d7b21ca",
            "322eacba9bf22479",
            "bf57d719eebbfec6",
            "f564c777416f75a3",
            "cb3325741dcf2be4",
            "ad8760f2b201463f",
            "c6e3504cf9435020",
            "4e3720d8b90b940e",
            "b6fe79caf64b0533",
            "d1834748977f6110",
            "02295e9e8a5a0b12",
            "094c5eb0bf1e763f",
            "d597429c893c92fd",
            "54deaafcd2f812ec",
            "4bb66513ec5edb70",
            "ad73f63afdeef1db",
            "366c3138531ffb8a",
            "f4f00af601ab2540",
            "8e14060ebcc6f42d",
            "404ce79dc9a21028",
            "30ab4d94774ebfab",
            "0a0a796613de2d14",
            "829dbe4dbf3879e9",
            "6da69c8ad9b8635c",
            "4ab5e5f830c1ff99"
        ],
        "x": 94,
        "y": 39,
        "w": 1888,
        "h": 1162
    },
    {
        "id": "fcc87bbf870e413f",
        "type": "mongodb",
        "hostname": "db63efcec3a0ac09120000006b-1676667500554roasterydb.ubos-p5rg8",
        "topology": "direct",
        "connectOptions": "authSource=admin",
        "port": "27017",
        "db": "roasteryDB",
        "name": "roasteryDB"
    },
    {
        "id": "a0a8ac24dd259796",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/createComponent",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "bb5e98450660a7a9"
            ]
        ]
    },
    {
        "id": "bb5e98450660a7a9",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "create component",
        "func": "msg.collection = \"components\";\n\n\nmsg.payload = {\n    ...msg.payload,\n    category: objectid(msg.payload.category),\n    box: objectid(msg.payload.box),\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "90eadecb9994374e"
            ]
        ]
    },
    {
        "id": "90eadecb9994374e",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 100,
        "wires": [
            [
                "b69506883b1408a7"
            ]
        ]
    },
    {
        "id": "0c6e625f141206c4",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "99bce7e4e33f7e44",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "get component",
        "func": "msg.collection = \"components\";\n\nlet match = {};\n\nif (msg.req.query.category !== \"null\" && msg.req.query.category !== undefined) {\n    match.category =objectid(msg.req.query.category)\n}\nif (msg.req.query.article !== \"\" && msg.req.query.article !== undefined) {\n    match.article = { $regex: msg.req.query.article, $options: \"i\"}\n}\n \nif (msg.req.query.box !== \"\" && msg.req.query.box !== undefined) {\n    match.box = objectid(msg.req.query.box)\n}\n\n\n\n\nmsg.payload = [\n    {\n        $match:{\n            \"deleted\": false,\n        ...match}\n    },\n    {\n        $lookup: {\n            from: \"category\",\n            localField: \"category\",\n            foreignField: \"_id\",\n            as: \"category_info\"\n        }\n    },\n    {\n        $lookup: {\n            from: \"componentsBox\",\n            localField: \"box\",\n            foreignField: \"_id\",\n            as: \"box_info\"\n        }\n    }\n    \n\n   \n];\n\n\n\n\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "d4cbec27a1f23803",
                "99e68f952823686b"
            ]
        ]
    },
    {
        "id": "d4cbec27a1f23803",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 650,
        "y": 180,
        "wires": [
            [
                "cd6d6cb4a7066cfa",
                "192afe569b18e9c3"
            ]
        ]
    },
    {
        "id": "c172c83f1277c29c",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 180,
        "wires": []
    },
    {
        "id": "cd6d6cb4a7066cfa",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "function 275",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 180,
        "wires": [
            [
                "c172c83f1277c29c",
                "192afe569b18e9c3"
            ]
        ]
    },
    {
        "id": "b69506883b1408a7",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 100,
        "wires": [
            [
                "0c6e625f141206c4"
            ]
        ]
    },
    {
        "id": "3107c78368bccd42",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/updateComponent",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "8065fd3b184110fc"
            ]
        ]
    },
    {
        "id": "8065fd3b184110fc",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "update component",
        "func": "msg.collection = \"components\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\nmsg.payload.category =  objectid(msg.payload.category)\nmsg.payload.box = objectid(msg.payload.box)\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "ac866a86fe962b42"
            ]
        ]
    },
    {
        "id": "ac866a86fe962b42",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 640,
        "y": 260,
        "wires": [
            [
                "3260a99d06bcf81b"
            ]
        ]
    },
    {
        "id": "5f7fa35a42aa45ea",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "3260a99d06bcf81b",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            [
                "5f7fa35a42aa45ea"
            ]
        ]
    },
    {
        "id": "5ee10184c6e5413c",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/deleteComponent",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "5fb55f6494028ddd",
                "8e7b64c1e9b23ea2"
            ]
        ]
    },
    {
        "id": "5fb55f6494028ddd",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "update component",
        "func": "msg.collection = \"components\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "740f066d6e6c3e7e"
            ]
        ]
    },
    {
        "id": "740f066d6e6c3e7e",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 660,
        "y": 340,
        "wires": [
            [
                "9303bfd82a0759e1"
            ]
        ]
    },
    {
        "id": "1187cc57ac39ce82",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "9303bfd82a0759e1",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 340,
        "wires": [
            [
                "1187cc57ac39ce82"
            ]
        ]
    },
    {
        "id": "a810d129ac755759",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/getSingleComponent",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "42cf77a40c8dd6ca"
            ]
        ]
    },
    {
        "id": "f4405fe7a3c90e4c",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 460,
        "wires": []
    },
    {
        "id": "42cf77a40c8dd6ca",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "find item",
        "func": "if (msg.req.query._id != \"null\"){\n    msg.collection = \"components\";\n    msg.payload = {\n        _id: objectid(msg.req.query._id)\n    }\n    return [msg, null]\n}else{\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "b034956c37a0abcd"
            ],
            [
                "f4405fe7a3c90e4c"
            ]
        ]
    },
    {
        "id": "b034956c37a0abcd",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "ff80b4d1cf60dc5f"
            ]
        ]
    },
    {
        "id": "b95e93b47bb0ed58",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "ff80b4d1cf60dc5f",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 420,
        "wires": [
            [
                "b95e93b47bb0ed58"
            ]
        ]
    },
    {
        "id": "7e3e862573e66aa7",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/getComponents",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "99bce7e4e33f7e44",
                "99e68f952823686b"
            ]
        ]
    },
    {
        "id": "99e68f952823686b",
        "type": "debug",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "b4f5c558e44f7bc8",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "url": "/createBox",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "b2bcfe8ae7b80ece"
            ]
        ]
    },
    {
        "id": "b2bcfe8ae7b80ece",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "create component dox",
        "func": "msg.collection = \"componentsBox\";\n\nmsg.payload = {\n    ...msg.payload,\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "ed7c5a7e4f4177ed"
            ]
        ]
    },
    {
        "id": "ed7c5a7e4f4177ed",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "0954561947bd7763"
            ]
        ]
    },
    {
        "id": "d4ceba4ac0e8369a",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "0954561947bd7763",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "d4ceba4ac0e8369a"
            ]
        ]
    },
    {
        "id": "192afe569b18e9c3",
        "type": "debug",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 220,
        "wires": []
    },
    {
        "id": "8e7b64c1e9b23ea2",
        "type": "debug",
        "z": "11664d9b36ce1761",
        "g": "7555777c5ed85291",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 380,
        "wires": []
    },
    {
        "id": "3190ec34ea513ffd",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "update box",
        "func": "msg.collection = \"componentsBox\";\n\nmsg.query = {\n    _id: objectid(msg.payload._id)\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 330,
        "y": 740,
        "wires": [
            [
                "642a1fde8eae0e24"
            ]
        ]
    },
    {
        "id": "642a1fde8eae0e24",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 740,
        "wires": [
            [
                "13a15a9c5366feb5"
            ]
        ]
    },
    {
        "id": "a704a1dd68a90507",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "13a15a9c5366feb5",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 740,
        "wires": [
            [
                "a704a1dd68a90507"
            ]
        ]
    },
    {
        "id": "58eb7d8a9c03293d",
        "type": "function",
        "z": "11664d9b36ce1761",
        "name": "get component",
        "func": "msg.collection = \"componentsBox\";\n\nmsg.payload={\n\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1660,
        "y": 160,
        "wires": [
            [
                "e3068bb1d29d97ba"
            ]
        ]
    },
    {
        "id": "e3068bb1d29d97ba",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1870,
        "y": 160,
        "wires": [
            [
                "e30279fc7e63f67d"
            ]
        ]
    },
    {
        "id": "5ea0a78b36d6fba3",
        "type": "inject",
        "z": "11664d9b36ce1761",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1440,
        "y": 160,
        "wires": [
            [
                "58eb7d8a9c03293d"
            ]
        ]
    },
    {
        "id": "e30279fc7e63f67d",
        "type": "debug",
        "z": "11664d9b36ce1761",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 160,
        "wires": []
    },
    {
        "id": "32db51b5e872e5f8",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "url": "/updateBox",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "3190ec34ea513ffd"
            ]
        ]
    },
    {
        "id": "c031996b4c36795f",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "update box",
        "func": "msg.collection = \"componentsBox\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 820,
        "wires": [
            [
                "f33796a3e8b18b76"
            ]
        ]
    },
    {
        "id": "f33796a3e8b18b76",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 820,
        "wires": [
            [
                "e7e41220dfdf46fd"
            ]
        ]
    },
    {
        "id": "0bf14f0d03d32fbe",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 820,
        "wires": []
    },
    {
        "id": "e7e41220dfdf46fd",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 820,
        "wires": [
            [
                "0bf14f0d03d32fbe"
            ]
        ]
    },
    {
        "id": "3bdab4a27caa64af",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "url": "/deleteBox",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 820,
        "wires": [
            [
                "c031996b4c36795f"
            ]
        ]
    },
    {
        "id": "61562721130fd036",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "get component box",
        "func": "msg.collection = \"componentsBox\";\n\nmsg.payload = {\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "4e5ae3d2a426859e"
            ]
        ]
    },
    {
        "id": "4e5ae3d2a426859e",
        "type": "link call",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 660,
        "wires": [
            [
                "88ac6af307a47559"
            ]
        ]
    },
    {
        "id": "673e9e7b85cab504",
        "type": "http response",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 660,
        "wires": []
    },
    {
        "id": "88ac6af307a47559",
        "type": "function",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "function 299",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 660,
        "wires": [
            [
                "673e9e7b85cab504"
            ]
        ]
    },
    {
        "id": "0703547ae3dbc05c",
        "type": "http in",
        "z": "11664d9b36ce1761",
        "g": "8fda6c5c07a59438",
        "name": "",
        "url": "/getBox",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "61562721130fd036"
            ]
        ]
    },
    {
        "id": "4bd5fe3f1cfac16f",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "url": "/createCatalogItem",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "cd5b375ec63ac403",
                "0d37175fc198d22a"
            ]
        ]
    },
    {
        "id": "dbcb7124ae4b4c0d",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "deleted = false",
        "func": "msg.collection = \"catalog\";\nif (msg.payload.length <= 0 ){\n    msg.oldpayload.address = objectid(msg.oldpayload.address);\n    msg.oldpayload.category = objectid(msg.oldpayload.category);\n    msg.payload = {\n        ...msg.oldpayload,\n        deleted: false\n    }  \n    return [msg, null]\n}else{\nmsg.payload={\n    error: \"Sku is already exists\"\n}\n\nreturn[ null,msg]}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 560,
        "y": 60,
        "wires": [
            [
                "a7fe2bc3f5777146",
                "0d37175fc198d22a"
            ],
            [
                "afe09c97d47b5085",
                "0d37175fc198d22a"
            ]
        ]
    },
    {
        "id": "a7fe2bc3f5777146",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 750,
        "y": 40,
        "wires": [
            [
                "364ee6077636fcfa"
            ]
        ]
    },
    {
        "id": "930144a7723a32b9",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "url": "/getCatalogItems",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "477b4db43062b9c5"
            ]
        ]
    },
    {
        "id": "7f8c0f673ea5f32f",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 160,
        "wires": [
            [
                "9c79f79b0b6dcf6f"
            ]
        ]
    },
    {
        "id": "d8214407fe6dd650",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "60e0eb77d6fb71d8",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "url": "/deleteCatalogItem",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "9452890379b2145b"
            ]
        ]
    },
    {
        "id": "9452890379b2145b",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "set deleted = true",
        "func": "msg.collection = \"catalog\"\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "e7f58d79f83a1de2"
            ]
        ]
    },
    {
        "id": "e7f58d79f83a1de2",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 600,
        "y": 220,
        "wires": [
            [
                "9633f945567e94d3"
            ]
        ]
    },
    {
        "id": "2ac8533ddeb794b1",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "url": "/updateCatalogItem",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "10cf815d26f2b122"
            ]
        ]
    },
    {
        "id": "10cf815d26f2b122",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "Update query",
        "func": "msg.collection = \"catalog\"\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\nmsg.payload.category = objectid(msg.payload.category)\nmsg.payload.address = objectid(msg.payload.address)\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 380,
        "y": 320,
        "wires": [
            [
                "284a82ff71af1b9c"
            ]
        ]
    },
    {
        "id": "284a82ff71af1b9c",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 580,
        "y": 320,
        "wires": [
            [
                "66507e0d2ed36722"
            ]
        ]
    },
    {
        "id": "b50308980d558d26",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "url": "/getSingleItem",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "3e7b078ee0a055a4"
            ]
        ]
    },
    {
        "id": "bd6bc80adc5805cc",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e7b078ee0a055a4",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "find item",
        "func": "if(msg.payload._id != \"null\"){\n    msg.collection = \"catalog\";\n    msg.payload = [\n        {\n            $match: {\n                \"deleted\": false,\n                _id: objectid(msg.payload._id)\n            }\n        },\n        {\n            $lookup: {\n                from: \"warehouse\",\n                localField: \"address\",\n                foreignField: \"_id\",\n                as: \"warehouse_info\"\n            }\n        },\n        {\n            $lookup: {\n                from: \"category\",\n                localField: \"category\",\n                foreignField: \"_id\",\n                as: \"category_info\"\n            }\n        }\n\n\n\n    ];\n    return [msg, null]\n}else{\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "8cf82ec0d25ea829"
            ],
            [
                "bd6bc80adc5805cc"
            ]
        ]
    },
    {
        "id": "8cf82ec0d25ea829",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "73b487518ba26085"
            ]
        ]
    },
    {
        "id": "2f7e206a7321f753",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 480,
        "wires": []
    },
    {
        "id": "73b487518ba26085",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "func": "msg.payload = msg.payload.map(e => {\n    return {\n        _id: e._id,\n        label: e.label,\n        model: e.model,\n        type: e.type,\n        serialNumber: e.serialNumber,\n        color: e.color,\n        sku: e.sku,\n        address: e.address,\n        category: e.category,\n        qr: e.qr,\n        more: e.more,\n        deleted: e.deleted,\n        status: e.status,\n        addressLabel: e.warehouse_info[0].warehouse,\n        addressWarehouse: e.warehouse_info[0].address,\n        categoryLabel: e.category_info[0].label,\n        isClient: e.isClient\n    }\n})\nmsg.payload = msg.payload[0]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 480,
        "wires": [
            [
                "2f7e206a7321f753"
            ]
        ]
    },
    {
        "id": "566995aec9a20a73",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "url": "/getLastSku",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "63dde80fa68145cb"
            ]
        ]
    },
    {
        "id": "63dde80fa68145cb",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "sort by sku",
        "func": "msg.collection = \"catalog\";\nmsg.payload = [\n    {\n        $match:{\n            deleted: false\n        }\n    },\n    {\n        $sort:{\n            sku: 1\n        }\n    }\n]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 560,
        "wires": [
            [
                "20315e15558d1dfc"
            ]
        ]
    },
    {
        "id": "20315e15558d1dfc",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "3694b644551e081c"
            ]
        ]
    },
    {
        "id": "3694b644551e081c",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "function 270",
        "func": "\nif(msg.payload.length > 0){\n    msg.payload = msg.payload[msg.payload.length - 1].sku;\n}else{\n    msg.payload = 'This item will be first'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "598b43fc8cce66e4"
            ]
        ]
    },
    {
        "id": "598b43fc8cce66e4",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "133bc991784bfea5",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "url": "/generateQR",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 760,
        "wires": [
            [
                "7c182f0d6cc280c6"
            ]
        ]
    },
    {
        "id": "76842a23b216181a",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1490,
        "y": 800,
        "wires": []
    },
    {
        "id": "094dbbde00e0f45e",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "url": "/getItemBySku",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "2eaefa4cac8171bb"
            ]
        ]
    },
    {
        "id": "2eaefa4cac8171bb",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "find element",
        "func": "msg.collection = \"catalog\";\nmsg.payload = [\n    {\n        $match:{\n            deleted: false,\n            sku: msg.payload.sku\n        }\n    },\n    {\n        $project:{\n            label:1,\n            model:1,\n            type:1,\n            serialNumber:1,\n            color:1,\n            sku:1,\n            address:1,\n            category:1,\n            more:1,\n            _id:0\n        }\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 620,
        "wires": [
            [
                "e5e276dcaa3f30e8"
            ]
        ]
    },
    {
        "id": "e5e276dcaa3f30e8",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 550,
        "y": 620,
        "wires": [
            [
                "08f7c52bc3d5fa79"
            ]
        ]
    },
    {
        "id": "08f7c52bc3d5fa79",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "formate payload",
        "func": "msg.payload = msg.payload[0]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 620,
        "wires": [
            [
                "96dc0b0498cde4f7"
            ]
        ]
    },
    {
        "id": "96dc0b0498cde4f7",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "b54200d9dea71783",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "7c182f0d6cc280c6",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "qr code input",
        "func": "msg.sku = msg.payload.sku\nmsg.qrcodeinput = `https://roastery-63efcec3a0ac09120000006b.ubos.tech/getItemBySku?sku=${msg.payload.sku}`\nmsg.link = `https://roastery-63efcec3a0ac09120000006b.ubos.tech/getItemBySku?sku=${msg.payload.sku}`\nmsg.collection = \"catalog\"\nmsg.payload = {\n    deleted: false,\n    sku: msg.payload.sku\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 760,
        "wires": [
            [
                "016543c37cc9a690"
            ]
        ]
    },
    {
        "id": "b76f5209d0d1dff9",
        "type": "qrcode-generator",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 750,
        "y": 800,
        "wires": [
            [
                "6cbd43eb6a2683f4"
            ]
        ]
    },
    {
        "id": "6cbd43eb6a2683f4",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "write file",
        "func": "var base64Data = msg.payload.replace(/^data:image\\/\\w+;base64,/, \"\");\nmsg.payload = base64Data\n\nmsg.filename = `/data/catalog/${msg.sku}.png`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 800,
        "wires": [
            [
                "9790a26d12e46637"
            ]
        ]
    },
    {
        "id": "b0f9094abf6ed52d",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "formate payload",
        "func": "msg.payload = {\n    link: msg.link\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 800,
        "wires": [
            [
                "76842a23b216181a"
            ]
        ]
    },
    {
        "id": "5dcc60cb40c94caf",
        "type": "file",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 800,
        "wires": [
            [
                "b0f9094abf6ed52d"
            ]
        ]
    },
    {
        "id": "9790a26d12e46637",
        "type": "base64",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "5dcc60cb40c94caf"
            ]
        ]
    },
    {
        "id": "eb3243bf95fe872e",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "url": "/getItemPageQR/:sku",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 860,
        "wires": [
            [
                "367b3e72e19afc0f"
            ]
        ]
    },
    {
        "id": "367b3e72e19afc0f",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "read file",
        "func": "msg.filename = `/data/catalog/${msg.req.params.sku}.png`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 860,
        "wires": [
            [
                "c284c35223b5703a"
            ]
        ]
    },
    {
        "id": "c284c35223b5703a",
        "type": "file in",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 860,
        "wires": [
            [
                "8d262e5455203643"
            ]
        ]
    },
    {
        "id": "8d262e5455203643",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "formate payload",
        "func": "msg.headers = {\n    'Content-Type': 'image/jpeg',\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 860,
        "wires": [
            [
                "901d88ae80e435e0"
            ]
        ]
    },
    {
        "id": "901d88ae80e435e0",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 860,
        "wires": []
    },
    {
        "id": "0dc45d603b33612c",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "read file",
        "func": "msg.filename = `/data/catalog/${msg.req.params.sku}.png`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 960,
        "wires": [
            [
                "330622fe2f0fdf7b"
            ]
        ]
    },
    {
        "id": "330622fe2f0fdf7b",
        "type": "file in",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 960,
        "wires": [
            [
                "c0f42bb354f49b07"
            ]
        ]
    },
    {
        "id": "378f266fba01cdb8",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "pdf",
        "func": "// msg.payload = {\n//     content: [\n//         {\n//             text: `SKU: ${msg.req.params.sku} Phone:0632065432`, style: 'header' \n//         },\n//         {\n//             image: `data:image/jpeg;base64,${msg.payload}`,\n//             margin: [0, 175, 0, 0],\n//             alignment: 'center',\n//             width: 300,\n//             height: 300\n//         }],\n//     styles: {\n//         header: {\n//             fontSize: 26,\n//             alignment: 'center',\n//             bold: true,\n//             margin: [0, 140, 0, 10]\n//         }\n//     }\n// }\n// return msg;\n\n\n// msg.payload = {\n//     content: [\n//         {\n//             text: `SKU: ${msg.req.params.sku}`,\n//             style: 'header',\n//             margin: [0, 20, 0, 0]\n//         },\n//         {\n//             text: `Phone: 0632065432`,\n//             style: 'subheader',\n//             margin: [0, 10, 0, 0]\n//         },\n//         {\n//             image: `data:image/jpeg;base64,${msg.payload}`,\n//             margin: [0, 10, 0, 0],\n//             alignment: 'center',\n//             width: 300,\n//             height: 300\n//         }\n//     ],\n//     styles: {\n//         header: {\n//             fontSize: 26,\n//             alignment: 'center',\n//             bold: true,\n//             margin: [0, 0, 0, 10]\n//         },\n//         subheader: {\n//             fontSize: 16,\n//             alignment: 'center',\n//             margin: [0, 0, 0, 5]\n//         }\n//     }\n// }\n\n\n// return msg;\n\n\nmsg.payload = {\n    content: [\n        {\n            text: `SKU: ${msg.req.params.sku}`,\n            style: 'header',\n            margin: [0, 20, 0, 0]\n        },\n        {\n            image: `data:image/jpeg;base64,${msg.payload}`,\n            margin: [0, 10, 0, 0],\n            alignment: 'center',\n            width: 300,\n            height: 300\n        },\n        {\n            text: `Phone: 0632065432`,\n            style: 'subheader',\n            margin: [0, 10, 0, 0]\n        }\n    ],\n    styles: {\n        header: {\n            fontSize: 26,\n            alignment: 'center',\n            bold: true,\n            margin: [0, 0, 0, 10]\n        },\n        subheader: {\n            fontSize: 16,\n            alignment: 'center',\n            margin: [0, 0, 0, 5]\n        }\n    }\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 960,
        "wires": [
            [
                "e552485cdaddee1a"
            ]
        ]
    },
    {
        "id": "7408b5aab9b40b65",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 960,
        "wires": []
    },
    {
        "id": "6a217787f607551c",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "formate payload",
        "func": "msg.headers = {\n    'Content-Disposition': `attachment; filename= \"${msg.req.params.sku}.pdf\"`,\n    'Content-Type': 'application/pdf'\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 960,
        "wires": [
            [
                "7408b5aab9b40b65"
            ]
        ]
    },
    {
        "id": "e552485cdaddee1a",
        "type": "pdfmake",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "outputType": "Buffer",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 920,
        "y": 960,
        "wires": [
            [
                "6a217787f607551c"
            ]
        ]
    },
    {
        "id": "c0f42bb354f49b07",
        "type": "base64",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 660,
        "y": 960,
        "wires": [
            [
                "378f266fba01cdb8"
            ]
        ]
    },
    {
        "id": "e9707b4b8c2c3262",
        "type": "http in",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "url": "/downloadItemQrPDF/:sku",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 960,
        "wires": [
            [
                "0dc45d603b33612c"
            ]
        ]
    },
    {
        "id": "477b4db43062b9c5",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "to BD",
        "func": "msg.collection = \"catalog\";\nlet match = {};\n\nif (msg.req.query.category !== \"null\" && msg.req.query.category !== \"undefined\") {\n    match.category =objectid(msg.req.query.category)\n}\nif (msg.req.query.sku != \"\" && msg.req.query.sku!= \"undefined\") {\n    match.sku = { $regex: msg.req.query.sku, $options: \"i\" }\n}\nif (msg.req.query.model !== \"\" && msg.req.query.model !== \"undefined\") {\n    match.model = { $regex: msg.req.query.model, $options: \"i\" }\n}\n\nif (msg.req.query.warehouse !== \"\" && msg.req.query.warehouse !== \"undefined\" && msg.req.query.warehouse !== \"null\") {\n    match.address = msg.req.query.warehouse !== \"\" && msg.req.query.warehouse !== \"undefined\"? objectid(msg.req.query.warehouse): \"\"\n}\n\n\n\nmsg.payload = [\n    {\n        $match: {\n            \"deleted\": false,\n            ...match\n        }\n    },\n    {\n        $lookup: {\n            from: \"warehouse\",\n            localField: \"address\",\n            foreignField: \"_id\",\n            as: \"warehouse_info\"\n        }\n    },\n    {\n        $lookup: {\n            from: \"category\",\n            localField: \"category\",\n            foreignField: \"_id\",\n            as: \"category_info\"\n        }\n    }\n\n\n\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 390,
        "y": 160,
        "wires": [
            [
                "7f8c0f673ea5f32f"
            ]
        ]
    },
    {
        "id": "9c79f79b0b6dcf6f",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "to App",
        "func": "msg.payload = msg.payload.map(e=>{\n    return {\n        _id: e._id,\n        label: e.label,\n        model: e.model,\n        type: e.type,\n        serialNumber: e.serialNumber,\n        color: e.color,\n        sku: e.sku,\n        address: e.address,\n        category: e.category,\n        qr: e.qr,\n        more: e.more,\n        deleted: e.deleted,\n        isClient:e.isClient,\n        addressLabel: e.warehouse_info[0].warehouse,\n        addressWarehouse: e.warehouse_info[0].address,\n        categoryLabel: e.category_info[0].label,\n        status: e.status,\n        categoryName: e.category_info[0].name\n\n    }\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 160,
        "wires": [
            [
                "d8214407fe6dd650"
            ]
        ]
    },
    {
        "id": "016543c37cc9a690",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 490,
        "y": 760,
        "wires": [
            [
                "cf8c9e69640e49e3"
            ]
        ]
    },
    {
        "id": "cf8c9e69640e49e3",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "function 281",
        "func": "if(msg.payload.length > 0){\n    msg.payload = {\n        success: false,\n        error: \"Item with this SKU already exist\"\n    }\n    return[msg,null]\n}else{\n    return[null,msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "53ae1f01af686bd9"
            ],
            [
                "b76f5209d0d1dff9"
            ]
        ]
    },
    {
        "id": "53ae1f01af686bd9",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "c9af0591a58bd161",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 860,
        "y": 740,
        "wires": []
    },
    {
        "id": "afe09c97d47b5085",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 731.3333129882812,
        "y": 106.33332824707031,
        "wires": []
    },
    {
        "id": "cd5b375ec63ac403",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "function 292",
        "func": "msg.oldpayload = msg.payload;\nmsg.collection = \"catalog\";\nmsg.payload = {\n    sku: msg.payload.sku\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 305,
        "y": 60,
        "wires": [
            [
                "c8a015c05911e694"
            ]
        ],
        "l": false
    },
    {
        "id": "c8a015c05911e694",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 395,
        "y": 60,
        "wires": [
            [
                "dbcb7124ae4b4c0d"
            ]
        ],
        "l": false
    },
    {
        "id": "0d37175fc198d22a",
        "type": "debug",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "e9d00252f852ba1c",
        "type": "inject",
        "z": "a55a9493487fce9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "e54dbc8d28bb0dd6"
            ]
        ]
    },
    {
        "id": "cf725adff3f681ea",
        "type": "debug",
        "z": "a55a9493487fce9c",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e54dbc8d28bb0dd6",
        "type": "function",
        "z": "a55a9493487fce9c",
        "name": "function 300",
        "func": "msg.collection = \"catalog\";\n\n// msg.query = {\n//     _id: objectid('640e626838bf520011ae41bd')\n// }\n\n\n// msg.payload = {\n//     $set:{\n//         sku: \"\"\n//     }\n// }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "1fdf6b466fec94b0"
            ]
        ]
    },
    {
        "id": "1fdf6b466fec94b0",
        "type": "link call",
        "z": "a55a9493487fce9c",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "cf725adff3f681ea"
            ]
        ]
    },
    {
        "id": "7c8d6c5e2cc8a36f",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 40,
        "wires": []
    },
    {
        "id": "364ee6077636fcfa",
        "type": "function",
        "z": "a55a9493487fce9c",
        "g": "2f5a14ca37d690a8",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 40,
        "wires": [
            [
                "7c8d6c5e2cc8a36f"
            ]
        ]
    },
    {
        "id": "2c1036ccd02bcada",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "9633f945567e94d3",
        "type": "function",
        "z": "a55a9493487fce9c",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 220,
        "wires": [
            [
                "2c1036ccd02bcada"
            ]
        ]
    },
    {
        "id": "06024756778252fc",
        "type": "http response",
        "z": "a55a9493487fce9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 320,
        "wires": []
    },
    {
        "id": "66507e0d2ed36722",
        "type": "function",
        "z": "a55a9493487fce9c",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "06024756778252fc"
            ]
        ]
    },
    {
        "id": "b9050c59f111a8f3",
        "type": "link in",
        "z": "98062c101743e314",
        "name": "mongo Find",
        "links": [],
        "x": 245,
        "y": 140,
        "wires": [
            [
                "bb2ebd954ae9a395"
            ]
        ]
    },
    {
        "id": "bb2ebd954ae9a395",
        "type": "mongodb in",
        "z": "98062c101743e314",
        "mongodb": "fcc87bbf870e413f",
        "name": "",
        "collection": "",
        "operation": "find",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "2f916412187b915e"
            ]
        ]
    },
    {
        "id": "3dd5a92cab6dfd52",
        "type": "mongodb in",
        "z": "98062c101743e314",
        "mongodb": "fcc87bbf870e413f",
        "name": "",
        "collection": "",
        "operation": "aggregate",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "342a3d975f30ac27"
            ]
        ]
    },
    {
        "id": "43d5d91587dfd815",
        "type": "mongodb out",
        "z": "98062c101743e314",
        "mongodb": "fcc87bbf870e413f",
        "name": "",
        "collection": "",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 390,
        "y": 320,
        "wires": []
    },
    {
        "id": "4b1d7512d0b505b8",
        "type": "mongodb out",
        "z": "98062c101743e314",
        "mongodb": "fcc87bbf870e413f",
        "name": "",
        "collection": "",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 390,
        "y": 360,
        "wires": []
    },
    {
        "id": "d44346ce1ee72fd9",
        "type": "link in",
        "z": "98062c101743e314",
        "name": "mongo Aggregate",
        "links": [],
        "x": 245,
        "y": 200,
        "wires": [
            [
                "3dd5a92cab6dfd52"
            ]
        ]
    },
    {
        "id": "808d0a67b4acc839",
        "type": "link in",
        "z": "98062c101743e314",
        "name": "mongo Insert",
        "links": [],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "43d5d91587dfd815",
                "c06429e3c6290c97"
            ]
        ]
    },
    {
        "id": "8f709f233a1011b5",
        "type": "link in",
        "z": "98062c101743e314",
        "name": "mongo Update",
        "links": [],
        "x": 255,
        "y": 360,
        "wires": [
            [
                "4b1d7512d0b505b8",
                "db5b9e90e543804a"
            ]
        ]
    },
    {
        "id": "2f916412187b915e",
        "type": "link out",
        "z": "98062c101743e314",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 505,
        "y": 140,
        "wires": []
    },
    {
        "id": "342a3d975f30ac27",
        "type": "link out",
        "z": "98062c101743e314",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 505,
        "y": 200,
        "wires": []
    },
    {
        "id": "c06429e3c6290c97",
        "type": "link out",
        "z": "98062c101743e314",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 405,
        "y": 280,
        "wires": []
    },
    {
        "id": "db5b9e90e543804a",
        "type": "link out",
        "z": "98062c101743e314",
        "name": "link out 5",
        "mode": "return",
        "links": [],
        "x": 405,
        "y": 400,
        "wires": []
    },
    {
        "id": "322ff37f58f4b0bb",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "registration",
        "url": "/registration",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "74447acc565d4dd5",
                "b8a7b5f4d45c1443"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "cb4b9a6f88d45121",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "c6649f25b98199ac",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection = \"admin_roles\";\n\nmsg.payload={\n    name:msg.payload.name,\n    deleted:false,\n    permissions: [],\n    createdAt: new Date((new Date().toISOString()))\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "902b7b73986896ae",
                "205de08a3a01e939"
            ]
        ]
    },
    {
        "id": "2c5a6545d4a6a298",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "createRole",
        "url": "/createRole",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1420,
        "wires": [
            [
                "c6649f25b98199ac"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "902b7b73986896ae",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 1440,
        "wires": []
    },
    {
        "id": "958470e4e3e31d30",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "getRoles",
        "url": "/getRoles",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1200,
        "wires": [
            [
                "4be199881c3de4a5"
            ]
        ]
    },
    {
        "id": "2506c0dbe69fb78b",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7a0e28eabbd32d25",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "addModuleToRole",
        "url": "/addModuleToRole",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1560,
        "wires": [
            [
                "8b2bcd5009f35afd",
                "4cca743fbaac34f7"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "1fb60e4dae692d5f",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "8b2bcd5009f35afd",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection = \"admin_roles\";\n\nlet crud = {\n    \"canCreate\": false,\n    \"canRead\": false,\n    \"canEdit\": false,\n    \"canRemove\": false\n}\n\nmsg.payload.options.map(e => {\n    if (e == \"C\") {\n        crud.canCreate = true\n    }\n    else if (e == \"R\") {\n        crud.canRead = true\n    }\n    else if (e == \"U\") {\n        crud.canEdit = true\n    } else if (e == \"D\") {\n        crud.canRemove = true\n    }\n})\n\n\nlet modules = msg.payload.moduleName.map((name, index)=> {\n    return {\n        \"name\": name,\n        \"value\": msg.payload.moduleValue[index]\n    }\n\n})\n\nlet preparedModules\n = modules.map(item => {\n    return{\n        module: item.name,\n        moduleId: objectid(item.value),\n        ...crud\n    }\n})\n\nmsg.query={\n    \"_id\":objectid(msg.payload._id)\n}\n\nmsg.payload={\n    $push: {\n        permissions: {\n            $each: [...preparedModules]\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 320,
        "y": 1560,
        "wires": [
            [
                "1fb60e4dae692d5f",
                "691390390c02d345"
            ]
        ]
    },
    {
        "id": "205de08a3a01e939",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 430,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "4be199881c3de4a5",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection=\"admin_roles\"\nmsg.payload={\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "2453ab62cd2ad481"
            ]
        ]
    },
    {
        "id": "2453ab62cd2ad481",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 430,
        "y": 1200,
        "wires": [
            [
                "2506c0dbe69fb78b",
                "1bd5dd699b5d7dd8"
            ]
        ]
    },
    {
        "id": "691390390c02d345",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "6444a894f849f11d",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection =\"admin_roles\"\n\nmsg.query={\n    _id: objectid(msg.payload._id)\n}\n\nmsg.payload={\n    $set:{\n        name: msg.payload.name\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 280,
        "y": 1680,
        "wires": [
            [
                "4d7681305f3c53df",
                "33a81142b86d3c03"
            ]
        ]
    },
    {
        "id": "c10b57db6735deb7",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "updateRole",
        "url": "/updateRole",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1680,
        "wires": [
            [
                "6444a894f849f11d"
            ]
        ],
        "icon": "font-awesome/fa-edit"
    },
    {
        "id": "4d7681305f3c53df",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "10",
        "x": 480,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "33a81142b86d3c03",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8090e559c4712e08",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "deleteModuleFromRole",
        "url": "/deleteModuleFromRole",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1940,
        "wires": [
            [
                "40aa2ee777849e51"
            ]
        ],
        "icon": "font-awesome/fa-remove"
    },
    {
        "id": "40aa2ee777849e51",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection = \"admin_roles\";\n\nmsg.query = {\n   \"_id\": objectid(msg.payload._id)\n};\n\nconst deleteModulesId = msg.payload.moduleId.map(i => objectid(i));\n\nmsg.payload = {\n    $pull: {\n        permissions: {\n            moduleId: {\n                $in: deleteModulesId\n            }\n        }\n    }\n}\n\n// msg.payload = {\n//     $pull: {\n//         \"permissions\": {\n//             \"moduleId\": objectid(msg.payload.moduleId)\n//         }\n//     }\n// }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 1940,
        "wires": [
            [
                "baf96cefd418fef2",
                "27a8ea20d0fc5edd",
                "e26733aca5535efe"
            ]
        ]
    },
    {
        "id": "baf96cefd418fef2",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "abe3dd07a7a56bda",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "deleteRole",
        "url": "/deleteRole",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1800,
        "wires": [
            [
                "35d5f0bc0f3d258c"
            ]
        ],
        "icon": "font-awesome/fa-remove"
    },
    {
        "id": "35d5f0bc0f3d258c",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "func": "msg.collection =\"admin_roles\"\n\nmsg.query={\n    _id: objectid(msg.payload._id)\n}\n\nmsg.payload={\n    $set:{\n        deleted: true\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 260,
        "y": 1800,
        "wires": [
            [
                "931a90379fad9b1a",
                "d74150168a56ad22"
            ]
        ]
    },
    {
        "id": "d74150168a56ad22",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 1820,
        "wires": []
    },
    {
        "id": "931a90379fad9b1a",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 460,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "27a8ea20d0fc5edd",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e26733aca5535efe",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1900,
        "wires": []
    },
    {
        "id": "4cca743fbaac34f7",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9b90431ce34dc067",
        "type": "inject",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1160,
        "wires": [
            [
                "4be199881c3de4a5"
            ]
        ]
    },
    {
        "id": "1bd5dd699b5d7dd8",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "all Roles",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1160,
        "wires": []
    },
    {
        "id": "41196ddd54635d7a",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "get roles",
        "func": "msg.collection = \"admin_roles\"\nlet match = {};\nif (msg.payload.name != \",\" && msg.payload.name) {\n    match = {\n        name: { $regex: msg.payload.name, $options: \"i\" }\n    }\n}\n\nmsg.payload = {\n    deleted: false, \n    ...match\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1320,
        "wires": [
            [
                "c6bcb6ec5ee4459a"
            ]
        ]
    },
    {
        "id": "c6bcb6ec5ee4459a",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 450,
        "y": 1320,
        "wires": [
            [
                "d7ef1036a6fbbb1a",
                "dc75649716f8ef7e"
            ]
        ]
    },
    {
        "id": "dc75649716f8ef7e",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "all roles",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d7ef1036a6fbbb1a",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c3751494c93bdc9b",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "getAllRoles",
        "url": "/getAllRoles",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "41196ddd54635d7a"
            ]
        ],
        "info": "Use in: User Management"
    },
    {
        "id": "008cb97aaa888bdc",
        "type": "inject",
        "z": "9cd5b0a57706b2b1",
        "g": "877f3370af549ead",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "41196ddd54635d7a"
            ]
        ]
    },
    {
        "id": "7d4115bbc11e8e91",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "createParentModule",
        "url": "/createParentModule",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2260,
        "wires": [
            [
                "43b5785a6442ae57",
                "f7801baa63ad5466"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "93e1be840ba83f2f",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 2220,
        "wires": []
    },
    {
        "id": "43b5785a6442ae57",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "func": "msg.collection = \"admin_modules\"\n\nmsg.payload = {\n    ...msg.payload,\n    deleted: false,\n    isParent: false\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2260,
        "wires": [
            [
                "c2aff94f308d6626",
                "93e1be840ba83f2f"
            ]
        ]
    },
    {
        "id": "3331eda74955f868",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "getModules",
        "url": "/getModules",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 2140,
        "wires": [
            [
                "3612ef2c892d24da"
            ]
        ]
    },
    {
        "id": "e7d1b7bcbedaca50",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 2140,
        "wires": []
    },
    {
        "id": "3612ef2c892d24da",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "func": "msg.collection=\"admin_modules\"\nmsg.payload={\n    deleted:false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2140,
        "wires": [
            [
                "16f1d13980c02cb3"
            ]
        ]
    },
    {
        "id": "f18b21b78d10575c",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "createChildModule",
        "url": "/createChildModule",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2660,
        "wires": [
            [
                "4a8b7e2936b3d062"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "40da44c8a285ddb4",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 2660,
        "wires": []
    },
    {
        "id": "4a8b7e2936b3d062",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "query",
        "func": "msg.collection = \"admin_modules\";\n\nif (msg.payload.parentModule) {\n    msg.query={\n        \"_id\": objectid(msg.payload.parentModule)\n    };\n\n    msg.payload = {\n        $addToSet: {\n            childModules: {\n                name: msg.payload.childModule,\n                page_id: msg.payload.childModule,\n                position: msg.payload.position\n            }\n        },\n        $set: {\n            isParent: true\n        }\n    }\n\n    return [msg,];\n} else {\n    \n    \n    msg.payload={\n        ...msg.payload,\n        deleted: false,\n        isParent: false\n    }\n    return [,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 2660,
        "wires": [
            [
                "534189747b13bd28",
                "40da44c8a285ddb4"
            ],
            [
                "e3dc35494c11cb67",
                "40da44c8a285ddb4"
            ]
        ]
    },
    {
        "id": "35b0d99cc8eec61d",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "deleteChildModule",
        "url": "/deleteChildModule",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2940,
        "wires": [
            [
                "8359fd262830dc38",
                "68463d9d5ebe0d7e"
            ]
        ],
        "icon": "font-awesome/fa-remove"
    },
    {
        "id": "8359fd262830dc38",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "query",
        "func": "msg.collection=\"admin_modules\";\n\nmsg.query = {\n    \"_id\": objectid(msg.payload._id)\n};\n\nmsg.payload = {\n    $pull: {\n        \"childModules\": {\n            \"name\": msg.payload.childModule_id\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 2940,
        "wires": [
            [
                "f49fe41610b77f0e",
                "985f3366479cc0da"
            ]
        ]
    },
    {
        "id": "985f3366479cc0da",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 2900,
        "wires": []
    },
    {
        "id": "16f1d13980c02cb3",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 2140,
        "wires": [
            [
                "e7d1b7bcbedaca50",
                "153ba7fd54ff4d26"
            ]
        ]
    },
    {
        "id": "f49fe41610b77f0e",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "e3dc35494c11cb67",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "534189747b13bd28",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "c2aff94f308d6626",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "c2d03061f715f0f4",
        "type": "inject",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2100,
        "wires": [
            [
                "3612ef2c892d24da"
            ]
        ]
    },
    {
        "id": "68463d9d5ebe0d7e",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "came",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 2900,
        "wires": []
    },
    {
        "id": "4adb2ae339ffb67a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "came",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 2780,
        "wires": []
    },
    {
        "id": "5b15a5ec79878165",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 560,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "2093b3bd184454f2",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "updateChildModule",
        "url": "/updateChildModule",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2820,
        "wires": [
            [
                "4689e18d0605acfb",
                "4adb2ae339ffb67a"
            ]
        ],
        "icon": "font-awesome/fa-edit"
    },
    {
        "id": "4689e18d0605acfb",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "query",
        "func": "msg.collection = \"admin_modules\";\n\nmsg.query = {\n    \"_id\": objectid(msg.payload._id),\n    \"childModules.name\": msg.payload.name\n};\n\nmsg.payload = {\n    $set: {\n        \"childModules.$.position\": msg.payload.position\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 2820,
        "wires": [
            [
                "5b15a5ec79878165",
                "164237e8a3b112b4"
            ]
        ]
    },
    {
        "id": "164237e8a3b112b4",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 2780,
        "wires": []
    },
    {
        "id": "f7801baa63ad5466",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 2220,
        "wires": []
    },
    {
        "id": "153ba7fd54ff4d26",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "all modules",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b972cf20d8695cb1",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "delete user query",
        "func": "msg.collection = \"admins\"\n\nmsg.query = {\n    \"_id\": objectid(msg.payload._id)\n};\n\nmsg.payload = {\n    $set: { \"deleted\": true }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 3380,
        "wires": [
            [
                "723a1b9981a3e1a1",
                "71163b37467b96b4",
                "4ff18686a1acc663"
            ]
        ]
    },
    {
        "id": "2cf5b996747deb47",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "get users query",
        "func": "msg.collection = \"admins\";\n\nmsg.payload=[\n    {\n      $match:{\n        deleted:false\n      }\n    },\n    {\n      $lookup: {\n       \"from\": \"admin_roles\",\n       \"localField\": \"roles\",\n       \"foreignField\":\"_id\",\n       \"as\": \"role_items\"\n     }\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3100,
        "wires": [
            [
                "7e50a01b66f70791"
            ]
        ]
    },
    {
        "id": "e1d422e6025d5a05",
        "type": "inject",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3060,
        "wires": [
            [
                "2cf5b996747deb47"
            ]
        ]
    },
    {
        "id": "ee75757cdfe678e1",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "getUsers",
        "url": "/getUsers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 3100,
        "wires": [
            [
                "2cf5b996747deb47"
            ]
        ]
    },
    {
        "id": "7e50a01b66f70791",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 3100,
        "wires": [
            [
                "26f38d20e9e82347",
                "daa827fd6793b2ca"
            ]
        ]
    },
    {
        "id": "26f38d20e9e82347",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 3100,
        "wires": []
    },
    {
        "id": "daa827fd6793b2ca",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "all users",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 3060,
        "wires": []
    },
    {
        "id": "72d31feadee44e28",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "editUserRole",
        "url": "/editUserRole",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 3220,
        "wires": [
            [
                "9af92418d9d4fee5"
            ]
        ],
        "icon": "font-awesome/fa-edit"
    },
    {
        "id": "9af92418d9d4fee5",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "edit role query",
        "func": "msg.collection = \"admins\";\n\nmsg.query = {\n    \"_id\": objectid(msg.payload.id)\n}\n\nmsg.payload = {\n    $set: {\n        \"roles\": [objectid(msg.payload.role)]\n   \n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 3220,
        "wires": [
            [
                "fef7bad230569363",
                "28580fcf0f25cff8",
                "2902f61d750262b1"
            ]
        ]
    },
    {
        "id": "28580fcf0f25cff8",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 560,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "fef7bad230569363",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 3220,
        "wires": []
    },
    {
        "id": "2902f61d750262b1",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "user role edited",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 3260,
        "wires": []
    },
    {
        "id": "a15aaf23babf5a47",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "deleteUser",
        "url": "/deleteUser",
        "method": "delete",
        "upload": true,
        "swaggerDoc": "",
        "x": 100,
        "y": 3380,
        "wires": [
            [
                "b972cf20d8695cb1"
            ]
        ],
        "icon": "font-awesome/fa-remove"
    },
    {
        "id": "723a1b9981a3e1a1",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "deleteUser msg to DB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 3420,
        "wires": []
    },
    {
        "id": "4ff18686a1acc663",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 3380,
        "wires": []
    },
    {
        "id": "71163b37467b96b4",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 580,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "d333f663dc6e9203",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "createUser",
        "url": "/createUser",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 3560,
        "wires": [
            [
                "88c7ee1514f4f898",
                "4488fbd58753d636"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "88c7ee1514f4f898",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "query",
        "func": "msg.collection = \"admins\";\nmsg.oldpayload = msg.payload;\n\nmsg.payload = {\n    email: msg.payload.email,\n    deleted: false\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 3560,
        "wires": [
            [
                "235efa0bf6dfcfc9",
                "e3374fd359c59164"
            ]
        ]
    },
    {
        "id": "4488fbd58753d636",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 3600,
        "wires": []
    },
    {
        "id": "235efa0bf6dfcfc9",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 3560,
        "wires": [
            [
                "861384fcb3fc5651",
                "f1499ed9ab81c0b8"
            ]
        ]
    },
    {
        "id": "e3374fd359c59164",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "msg to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 3520,
        "wires": []
    },
    {
        "id": "861384fcb3fc5651",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "check",
        "func": "if (msg.payload.length > 0) {\n    msg.payload = {\n        data: \"This email address already exists\",\n        code: 400,\n    }\n    return [null, msg]\n}\nelse{\n    return [msg, null]\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3560,
        "wires": [
            [
                "aefe1c6019acd5b5",
                "7c675c5ceb12c776"
            ],
            [
                "36ab33372c9a94b5",
                "6f463e1305003fae"
            ]
        ]
    },
    {
        "id": "f1499ed9ab81c0b8",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 3600,
        "wires": []
    },
    {
        "id": "36ab33372c9a94b5",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 820,
        "y": 3600,
        "wires": []
    },
    {
        "id": "6f463e1305003fae",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "err when created user",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 3640,
        "wires": []
    },
    {
        "id": "aefe1c6019acd5b5",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "registration user",
        "func": "let randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\nlet encryptedPassword = await bcrypt.hash(msg.oldpayload.password, 10);\n\nmsg.payload = {\n    \"_id\": objectid(),\n    \"deleted\": false,\n    \"avatarColor\": randomColor,\n    \"createdAt\": new Date(),\n    \"roles\": [objectid(msg.oldpayload.role)],\n    \"active\": true,\n    \"firstname\": msg.oldpayload.firstname,\n    \"lastname\": msg.oldpayload.lastname,\n    \"email\": msg.oldpayload.email,\n    \"password\": encryptedPassword,\n    \"position\": msg.oldpayload.position,\n    verifyToken: null,\n    resetPassToken: \"\",\n    resetPassExpireToken: null\n}\n\nreturn msg;\n\n\n\n\n\n\n\n// let randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n// let encryptedPassword = await bcrypt.hash(msg.oldpayload.password, 10);\n// const verifyToken = await jwt.sign(\n//     { id: Math.round(Math.random()) },\n//     \"test\",\n//     {\n//         expiresIn: \"150m\",\n//     }\n// );\n\n// msg.cookies = {};\n// msg.cookies[\"verify_token\"] = verifyToken;\n// msg.cookies[\"email_register\"] = msg.oldpayload.email;\n\n// msg.payload = {\n//     \"_id\": objectid(),\n//     \"deleted\": false,\n//     \"avatarColor\": randomColor,\n//     \"createdAt\": new Date(),\n//     \"roles\": [objectid(\"634fe97d28c82b00103cd25d\")],\n//     \"active\": false,\n//     \"firstname\": msg.oldpayload.firstname,\n//     \"lastname\": msg.oldpayload.lastname,\n//     \"email\": msg.oldpayload.email,\n//     \"password\": encryptedPassword,\n//     verifyToken,\n//     resetPassToken: \"\",\n//     resetPassExpireToken: null\n// }\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            },
            {
                "var": "bcrypt",
                "module": "bcrypt"
            },
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 840,
        "y": 3540,
        "wires": [
            [
                "15c82a2210a604cb",
                "75d81ccb277a2c65",
                "d9b821998a40c3e5"
            ]
        ]
    },
    {
        "id": "7c675c5ceb12c776",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3500,
        "wires": []
    },
    {
        "id": "15c82a2210a604cb",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 3580,
        "wires": []
    },
    {
        "id": "75d81ccb277a2c65",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1080,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "d9b821998a40c3e5",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e8e645803dc104cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 3540,
        "wires": []
    },
    {
        "id": "3b68b8b69b9709dd",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "login",
        "url": "/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "0d4ef41b338a8127",
                "6b6f1ea8f9dd1add"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "0d4ef41b338a8127",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check",
        "func": "const regexEmail = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nconst regexPassword = /^(?!.*\\s).{8,}/;\nconst email = msg.payload.email.toLowerCase();\n\nif (!regexEmail.test(email)) {\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"Email is invalid\",\n        code: 401\n    }\n\n    return [null, msg];\n\n} else if (!regexPassword.test(msg.payload.password)) {\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"The password is invalid. The value must be at least 8 characters and without whitespaces\",\n        code: 401\n    }\n\n    return [null, msg];\n    \n} else {\n    msg.collection = \"admins\"\n    msg.fromApp = msg.payload\n\n    node.warn(msg.fromApp)\n\n    msg.payload = {\n        email: email,\n        deleted: false\n    }\n\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "e7e72f5949984b01",
                "c62eadffe154e800"
            ],
            [
                "51f924c149db6bc5",
                "2fb628524fac30b1"
            ]
        ]
    },
    {
        "id": "c6a51f2bf818e8b2",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 100,
        "wires": []
    },
    {
        "id": "a01684214d14423a",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check auth",
        "func": "\nif(msg.payload.length === 0){\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"Incorrect email or password\",\n        code:401\n    }\n    node.warn(\"Email not found\");\n    return [null,msg]\n} else {\n\n    let check = await bcrypt.compare(msg.fromApp.password, msg.payload[0].password);\n\n    if (!check) {\n        msg.statusCode = 401;\n        msg.payload = {\n            data: \"Incorrect email or password\",\n            code: 401\n        }\n        node.warn(\"Password incorrect\");\n        return [null, msg]\n    }\n\n    if (msg.payload[0].active === false) {\n        msg.statusCode = 401;\n        msg.payload = {\n            data: \"Email not activated\",\n            code: 401\n        }\n        return [null, msg]\n    }\n}\n\n\n\nreturn[msg,null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "bcrypt",
                "module": "bcrypt"
            }
        ],
        "x": 850,
        "y": 120,
        "wires": [
            [
                "41a1b8d3e9728b5c",
                "0579a61438826b1e"
            ],
            [
                "fb09fa73c5abf4fd",
                "efc9c2a875e3a58f"
            ]
        ]
    },
    {
        "id": "fb09fa73c5abf4fd",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "41a1b8d3e9728b5c",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "jwt token",
        "func": "msg.payload = msg.payload[0]\nconst token = jwt.sign(\n    { user_id: msg.payload._id, email:msg.payload.email },\n    \"test\",\n    {\n        expiresIn: \"1400m\",\n    }\n);\n\nmsg.cookies = {};\nmsg.cookies[\"user_token\"] = token;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "c6a51f2bf818e8b2",
                "a550385558f993f5"
            ]
        ]
    },
    {
        "id": "a550385558f993f5",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 60,
        "wires": []
    },
    {
        "id": "c03749451e81740d",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check_token",
        "url": "/check_token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 860,
        "wires": [
            [
                "80c3f5937053f5e8",
                "0ec6bfe111bc9fea"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "9a7fa9e463be74ae",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 1040,
        "y": 900,
        "wires": []
    },
    {
        "id": "80c3f5937053f5e8",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check jwt",
        "func": "msg.check = msg.payload;\nvar decoded = jwt.verify(msg.payload.token, 'test');\nmsg.payload = decoded\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 320,
        "y": 860,
        "wires": [
            [
                "add2bce20664cd4e",
                "534b7b31cfc697c2"
            ]
        ]
    },
    {
        "id": "add2bce20664cd4e",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 820,
        "wires": []
    },
    {
        "id": "0ec6bfe111bc9fea",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "Checker",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 820,
        "wires": []
    },
    {
        "id": "0cac428de9fa885d",
        "type": "catch",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "scope": [
            "80c3f5937053f5e8"
        ],
        "uncaught": false,
        "x": 100,
        "y": 960,
        "wires": [
            [
                "797b8ee3904507ca",
                "82d1c248faf46157"
            ]
        ]
    },
    {
        "id": "797b8ee3904507ca",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "func": "msg.payload = {\n    auth: \"Unautorizate\",\n    code: 401,\n    login_id: msg.check.login_id,\n    app_id: msg.check.app_id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 960,
        "wires": [
            [
                "987bed5ec72a59d1",
                "df2045e89f351efa"
            ]
        ]
    },
    {
        "id": "987bed5ec72a59d1",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 960,
        "wires": []
    },
    {
        "id": "534b7b31cfc697c2",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check",
        "func": "msg.collection = \"admins\"\nmsg.fromApp = msg.payload\nmsg.payload = {\n    // email : msg.fromApp.email,\n    _id: objectid(msg.payload.user_id),\n    deleted:false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 490,
        "y": 860,
        "wires": [
            [
                "9f7a94fe322d61c9",
                "063f03c2b0c56f2d"
            ]
        ]
    },
    {
        "id": "9d7e28c68a36c77f",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check auth",
        "func": "\nif(msg.payload.length > 0){\n    msg.payload = msg.payload[0]\n    msg.user = {\n        auth: \"Success\",\n        code:200,\n        user: msg.payload\n    }\n    return [msg,null]\n}else{\n    msg.payload = {\n        auth: \"Unautorizate\",\n        code: 401,\n        login_id:msg.check.login_id,\n        app_id:msg.check.app_id\n    }\n    return [null,msg]\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 860,
        "wires": [
            [
                "45c3973be5c19ad4",
                "4b1038e3fcd1b271"
            ],
            [
                "9a7fa9e463be74ae"
            ]
        ]
    },
    {
        "id": "df2045e89f351efa",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bb34e85be9dfdf2b",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 780,
        "wires": []
    },
    {
        "id": "82d1c248faf46157",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7ad1f18d8e656cb5",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "20901ef99b84969c",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1870,
        "y": 820,
        "wires": []
    },
    {
        "id": "0579a61438826b1e",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 60,
        "wires": []
    },
    {
        "id": "efc9c2a875e3a58f",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "err login",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 200,
        "wires": []
    },
    {
        "id": "c997befc2146715e",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "a01684214d14423a",
                "2eff455923b1d94a"
            ]
        ]
    },
    {
        "id": "9f7a94fe322d61c9",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 680,
        "y": 860,
        "wires": [
            [
                "9d7e28c68a36c77f",
                "7ad1f18d8e656cb5"
            ]
        ]
    },
    {
        "id": "dc67eda3cf39d7e5",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "THIS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 780,
        "wires": []
    },
    {
        "id": "6b6f1ea8f9dd1add",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 80,
        "wires": []
    },
    {
        "id": "e0f8b6a14dfa2f72",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "signout",
        "url": "/signout",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "24dedd4e462d71c8",
                "44c20885dbc6d552"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "24d2090e08925fe9",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "Checker",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 280,
        "wires": []
    },
    {
        "id": "046f466ffe498dca",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "44c20885dbc6d552",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "Checker",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "24dedd4e462d71c8",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check jwt",
        "func": "msg.cookies={\n    user_token: null\n}\n\nmsg.payload={\n    success: true\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "24d2090e08925fe9",
                "cf1c13ce610a9661"
            ]
        ]
    },
    {
        "id": "cf1c13ce610a9661",
        "type": "delay",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 320,
        "wires": [
            [
                "046f466ffe498dca"
            ]
        ]
    },
    {
        "id": "e7e72f5949984b01",
        "type": "delay",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "c997befc2146715e",
                "ca5facb54a7e7671"
            ]
        ]
    },
    {
        "id": "4b1038e3fcd1b271",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "get roles",
        "func": "msg.collection = \"admin_roles\"\nmsg.payload = [\n    {\n        $match:{\n            \"_id\": ObjectId(msg.payload.roles)\n        }\n    },\n    {\n        $lookup: {\n            from: 'translation',\n            as: 'translation',\n            pipeline: [\n                {\n                    $match: {\n                        deleted: false,\n                        language: msg.user.user.language\n                    }\n                }\n            ]\n        }\n    },\n    {\n        $lookup:\n        {\n            from: \"admin_modules\",\n            localField: \"permissions.moduleId\",\n            foreignField: \"_id\",\n            as: \"menu\"\n    }\n},\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "ObjectId",
                "module": "objectid"
            }
        ],
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "1e05c474cfc43cdb",
                "42b1e7124725fbdd"
            ]
        ]
    },
    {
        "id": "45c3973be5c19ad4",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 780,
        "wires": []
    },
    {
        "id": "2eff455923b1d94a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg from db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "c62eadffe154e800",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "ca5facb54a7e7671",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg delay to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "d75219ad87940b06",
        "type": "inject",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "0d4ef41b338a8127"
            ]
        ]
    },
    {
        "id": "2a0f62276d872e6f",
        "type": "catch",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "g",
        "scope": [
            "4b1038e3fcd1b271"
        ],
        "uncaught": false,
        "x": 1470,
        "y": 900,
        "wires": [
            [
                "98d5ddb7a82e8f07",
                "5d59528c309ca45d"
            ]
        ]
    },
    {
        "id": "98d5ddb7a82e8f07",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "show err Unautorizate",
        "func": "msg.payload ={\n    auth: \"Unautorizate\",\n    code: 401,\n    login_id: msg.check.login_id,\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 900,
        "wires": [
            [
                "20901ef99b84969c",
                "5d59528c309ca45d"
            ]
        ]
    },
    {
        "id": "5d59528c309ca45d",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 960,
        "wires": []
    },
    {
        "id": "063f03c2b0c56f2d",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "query to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 820,
        "wires": []
    },
    {
        "id": "b8a7b5f4d45c1443",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 420,
        "wires": []
    },
    {
        "id": "74447acc565d4dd5",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check ",
        "func": "const regexEmail = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nconst regexPassword = /^(?!.*\\s).{8,}/;\nconst email = msg.payload.email.toLowerCase();\n\nif (!regexEmail.test(email)) {\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"Email is invalid\",\n        code: 401\n    }\n\n    return [null, msg];\n\n} else if (!regexPassword.test(msg.payload.password)) {\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"The password is invalid. The value must be at least 8 characters and without whitespaces\",\n        code: 401\n    }\n\n    return [null, msg];\n\n} else {\n    msg.collection = \"admins\";\n    msg.oldpayload = msg.payload;\n\n    msg.payload = {\n        email: email,\n        deleted: false\n    };\n\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 460,
        "wires": [
            [
                "5183ac252096acc7",
                "b6b1dca1d5dcee76"
            ],
            [
                "169821c651177a1b",
                "f9b36cc9731089d9"
            ]
        ]
    },
    {
        "id": "5183ac252096acc7",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 480,
        "y": 460,
        "wires": [
            [
                "66a4fec1773766d1",
                "cb4b9a6f88d45121"
            ]
        ]
    },
    {
        "id": "b6b1dca1d5dcee76",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 420,
        "wires": []
    },
    {
        "id": "66a4fec1773766d1",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "check",
        "func": "if (msg.payload.length > 0) {\n    if (!msg.payload[0].active) {\n        const decoded = jwt.verify(msg.payload[0].verifyToken, 'test');\n        const dateNow = new Date().getTime();\n\n        if (decoded.exp < dateNow) {\n            msg.query = { _id: objectid(msg.payload[0]._id) }\n            msg.payload = {\n                $set: {\n                    deleted: false\n                }\n            }\n\n            return [null, null, msg, null]\n        } else {\n            msg.payload = {\n                verifyToken: msg.payload[0].verifyToken,\n                email: msg.payload[0].email\n            }\n\n            return [null, null, null, msg]\n        }\n    } else {\n        msg.payload = {\n            data: \"This email address already exists\",\n            code: 400,\n        }\n        return [null, msg, null, null]\n    }\n}\nelse {\n    return [msg, null, null, null]\n}\n\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            },
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 650,
        "y": 460,
        "wires": [
            [
                "1864c6ccfea89c11",
                "3d894b4cdbf5a0a7"
            ],
            [
                "a72443bdec0a7a3e",
                "0b5b76677edc256b"
            ],
            [
                "e1aa276151b836b3"
            ],
            [
                "820841ffb5c5e797"
            ]
        ]
    },
    {
        "id": "1864c6ccfea89c11",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "registration user",
        "func": "let randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\nlet encryptedPassword = await bcrypt.hash(msg.oldpayload.password, 10);\nconst verifyToken = await jwt.sign(\n    { id: Math.round(Math.random()) },\n    \"test\",\n    {\n        expiresIn: \"150m\",\n    }\n);\n\nmsg.cookies = {};\nmsg.cookies[\"verify_token\"] = verifyToken;\nmsg.cookies[\"email_register\"] = msg.oldpayload.email;\n\nmsg.payload = {\n    \"_id\": objectid(),\n    \"deleted\": false,\n    \"avatarColor\": randomColor,\n    \"createdAt\": new Date(),\n    \"roles\": [objectid(\"634fe97d28c82b00103cd25d\")],\n    \"active\": false,\n    \"firstname\": msg.oldpayload.firstname,\n    \"lastname\": msg.oldpayload.lastname,\n    \"email\": msg.oldpayload.email.toLowerCase(),\n    \"password\": encryptedPassword,\n    verifyToken,\n    resetPassToken: \"\",\n    resetPassExpireToken: null\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            },
            {
                "var": "bcrypt",
                "module": "bcrypt"
            },
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 1080,
        "y": 320,
        "wires": [
            [
                "820841ffb5c5e797",
                "8b31dca641994169",
                "41c35651fc40e756"
            ]
        ]
    },
    {
        "id": "a72443bdec0a7a3e",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1140,
        "y": 400,
        "wires": []
    },
    {
        "id": "0b5b76677edc256b",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "err when created user",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 440,
        "wires": []
    },
    {
        "id": "3d894b4cdbf5a0a7",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "41c35651fc40e756",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1320,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "820841ffb5c5e797",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to email",
        "func": "const token = msg.payload.verifyToken;\nconst nodeUrl = env.get(\"nodeUrl\");\nconst url = `${nodeUrl}/verifyToken?token=${token}`;\nconst text = `\n<div style=\"padding: 10px 0; color: black;\">\n    <h1>Confirm Your Email Address</h1>\n    <p>Tap the button below to confirm your email address. If you didn't create an account, you can delete this email.</p>\n    <a href=\"${url}\" target=\"_blank\" style=\"margin: 10px 0; display: inline-block; padding: 16px 36px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; color: #ffffff; text-decoration: none; border-radius: 6px; background: #95e4f0;\">Confirm</a>\n</div>\n`;\n\nmsg.to = msg.payload.email;\nmsg.topic = 'Ritman verifay';\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 1310,
        "y": 320,
        "wires": [
            [
                "acb942bcf42b27f9",
                "e93e2e0e14181be9",
                "e1f9d7c545e406ec"
            ]
        ]
    },
    {
        "id": "8b31dca641994169",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 360,
        "wires": []
    },
    {
        "id": "e93e2e0e14181be9",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to email",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 280,
        "wires": []
    },
    {
        "id": "e1f9d7c545e406ec",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1470,
        "y": 360,
        "wires": []
    },
    {
        "id": "cbd1c2614c588e9a",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "repeatRegisterEmail",
        "url": "/repeatRegisterEmail",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "810e2858940505d9",
                "db9fc94fb29b93a0"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "810e2858940505d9",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "email and token",
        "func": "msg.payload = {\n    verifyToken: msg.req.cookies.verify_token,\n    email: msg.req.cookies.email_register.toLowerCase()\n}\nmsg.email = msg.req.cookies.email_register.toLowerCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 660,
        "wires": [
            [
                "896c08e71dd4c202",
                "974f936d0aefc984"
            ]
        ]
    },
    {
        "id": "db9fc94fb29b93a0",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 700,
        "wires": []
    },
    {
        "id": "226c5cadebc441c7",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 700,
        "wires": []
    },
    {
        "id": "974f936d0aefc984",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to email",
        "func": "const token = msg.payload.verifyToken;\nconst nodeUrl = env.get(\"nodeUrl\");\nconst url = `${nodeUrl}/verifyToken?token=${token}`;\nconst text = `\n<div style=\"padding: 10px 0; color: black;\">\n    <h1>Confirm Your Email Address</h1>\n    <p>Tap the button below to confirm your email address. If you didn't create an account, you can delete this email.</p>\n    <a href=\"${url}\" target=\"_blank\" style=\"margin: 10px 0; display: inline-block; padding: 16px 36px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; color: #ffffff; text-decoration: none; border-radius: 6px; background: #95e4f0;\">Confirm</a>\n</div>\n`;\n\nmsg.to = msg.payload.email;\nmsg.topic = 'Ritman verifay';\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 570,
        "y": 660,
        "wires": [
            [
                "d8df30c180dc09f6",
                "b23f2eb983d0775a",
                "4d18d71b734e1359"
            ]
        ]
    },
    {
        "id": "b23f2eb983d0775a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "repeat msg to email",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "896c08e71dd4c202",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "4d18d71b734e1359",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "msg to page",
        "func": "msg.payload = {\n    data: `We sent the email \"${msg.email}\" again. Please, check your inbox or spam.`\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 700,
        "wires": [
            [
                "226c5cadebc441c7",
                "94d4a342b505d9f1"
            ]
        ]
    },
    {
        "id": "94d4a342b505d9f1",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "finish",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 660,
        "wires": []
    },
    {
        "id": "1573aa72594fb9d1",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "verifyToken",
        "url": "/verifyToken",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 870,
        "y": 1200,
        "wires": [
            [
                "33b444400df726e4",
                "80f72d742cde74ab"
            ]
        ]
    },
    {
        "id": "81d3a60982bed479",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1610,
        "y": 1200,
        "wires": []
    },
    {
        "id": "80f72d742cde74ab",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "query to db",
        "func": "msg.collection = \"admins\";\nmsg.cameToken = msg.payload.token;\n\nmsg.payload = {\n    verifyToken: msg.payload.token\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1200,
        "wires": [
            [
                "8eda245a8ccc7e8a",
                "d065be8fa3b5a3fd"
            ]
        ]
    },
    {
        "id": "33b444400df726e4",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1160,
        "wires": []
    },
    {
        "id": "09a4715864b5adc7",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "finish",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8eda245a8ccc7e8a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "query to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1160,
        "wires": []
    },
    {
        "id": "0fcdf1045b75f1dd",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "res db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d32d4b12e57767d7",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "redirect to page",
        "func": "const token = await jwt.sign(\n    { user_id: msg.payload[0]._id, email: msg.payload[0].email },\n    \"test\",\n    {\n        expiresIn: \"150m\",\n    }\n);\nconst uiUrl = env.get(\"uiUrl\");\n\nmsg.token = token\nmsg.statusCode = 302\nmsg.headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Credentials\": true,\n    \"location\": `${uiUrl}/Login`\n}\n\nmsg.collection = \"admins\";\nmsg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\nmsg.payload = {\n    $set: {\n        active: true,\n        verifyToken: null\n    }\n}\n\nnode.send(msg)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            },
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1440,
        "y": 1200,
        "wires": [
            [
                "81d3a60982bed479",
                "09a4715864b5adc7",
                "50012c12163687b7"
            ]
        ]
    },
    {
        "id": "d065be8fa3b5a3fd",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1270,
        "y": 1200,
        "wires": [
            [
                "d32d4b12e57767d7",
                "0fcdf1045b75f1dd"
            ]
        ]
    },
    {
        "id": "50012c12163687b7",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "98ed1097a5f070dd",
        "name": "",
        "links": [
            "d18259abf93772bb"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1640,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "84e3d7890fb8f675",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "queryToResetPassword",
        "url": "/queryToResetPassword",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 900,
        "y": 1640,
        "wires": [
            [
                "9c2e58f24ebf9ac8",
                "354c95a549a6860f"
            ]
        ]
    },
    {
        "id": "9c2e58f24ebf9ac8",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1600,
        "wires": []
    },
    {
        "id": "354c95a549a6860f",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "func": "msg.collection = \"admins\";\nmsg.token = msg.payload.token;\n\nmsg.payload = {\n    resetPassToken: msg.payload.token\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1640,
        "wires": [
            [
                "058cc733fbc835b1",
                "3eebaa9cfac30209"
            ]
        ]
    },
    {
        "id": "058cc733fbc835b1",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3eebaa9cfac30209",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1340,
        "y": 1640,
        "wires": [
            [
                "af0dfff3165b19ca",
                "9eef3002c32b9d91"
            ]
        ]
    },
    {
        "id": "af0dfff3165b19ca",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "redirect to page",
        "func": "const dateNow = new Date().getTime();\nconst uiUrl = env.get(\"uiUrl\");\n\nif (msg.payload[0].resetPassExpireToken > dateNow) {\n    msg.statusCode = 302\n    msg.headers = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n        \"location\": `${uiUrl}/ResetPassword?token=${msg.token}`\n    }\n} else {\n    msg.payload = '<h1>Link expired</h1>';\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            },
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1520,
        "y": 1640,
        "wires": [
            [
                "9b448ee9048975e1",
                "ba556ebd17b12bca"
            ]
        ]
    },
    {
        "id": "9eef3002c32b9d91",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "res db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 1600,
        "wires": []
    },
    {
        "id": "9b448ee9048975e1",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1690,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ba556ebd17b12bca",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "finish queryToResetPassword",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 1600,
        "wires": []
    },
    {
        "id": "30b6dee89658a106",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "sendEmailForResetPassword",
        "url": "/sendEmailForResetPassword",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 920,
        "y": 1460,
        "wires": [
            [
                "0c12462407e342b8",
                "a2b078bff63fbf30"
            ]
        ],
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "0c12462407e342b8",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "func": "const regexEmail = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nconst email = msg.payload.email.toLowerCase();\n\nif (!regexEmail.test(email)) {\n\n    msg.statusCode = 401;\n    msg.payload = {\n        data: \"Email is invalid\",\n        code: 401\n    }\n\n    return [null, msg];\n\n} else {\n    msg.collection = \"admins\";\n\n    msg.email = msg.payload.email;\n\n    msg.payload = {\n        email: email,\n        deleted: false\n    }\n\n    return [msg, null];\n} \n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1460,
        "wires": [
            [
                "8f52e194f069a57b"
            ],
            [
                "d61479a1381fffef",
                "5b791cd411f92e64"
            ]
        ]
    },
    {
        "id": "a2b078bff63fbf30",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1420,
        "wires": []
    },
    {
        "id": "8f52e194f069a57b",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1380,
        "y": 1460,
        "wires": [
            [
                "34b63e4cb923cba6",
                "df878f590e8d63aa"
            ]
        ]
    },
    {
        "id": "34b63e4cb923cba6",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "send response",
        "func": "if (msg.payload.length === 0){\n    msg.statusCode = 401;\n\n    msg.payload = {\n        data: \"Forbidden! Incorrect email.\",\n        code: 401\n    }\n    return [null, msg]\n}\n\nmsg.payload = msg.payload[0];\n    \nreturn[msg, null]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1460,
        "wires": [
            [
                "88ceedb4a9e511ef",
                "27acd6109b7abb58"
            ],
            [
                "a1b02fcc79d40ee2",
                "63e09a2a5a85eb97"
            ]
        ]
    },
    {
        "id": "df878f590e8d63aa",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "Item after DB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1420,
        "wires": []
    },
    {
        "id": "88ceedb4a9e511ef",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "item",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 1400,
        "wires": []
    },
    {
        "id": "27acd6109b7abb58",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "func": "// Add 30 minutes\nconst date = new Date();\nconst expireTime = date.setMinutes(date.getMinutes() + 30);\nconst token = crypto.randomBytes(64).toString('hex');\n\nmsg.oldpayload = msg.payload;\nmsg.token = token;\n\nmsg.cookies = {};\nmsg.cookies[\"user_email\"] = msg.email;\n\nmsg.collection = \"admins\";\nmsg.query = {\n    _id: objectid(msg.payload._id)\n}\nmsg.payload = {\n    $set: {\n        resetPassToken: token,\n        resetPassExpireToken: expireTime\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            },
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 1750,
        "y": 1440,
        "wires": [
            [
                "61cc2ca6290c791b",
                "31bfcb0dee7f8219",
                "d39a499fb4f07204"
            ]
        ]
    },
    {
        "id": "a1b02fcc79d40ee2",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1730,
        "y": 1480,
        "wires": []
    },
    {
        "id": "63e09a2a5a85eb97",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "err email not found",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 1520,
        "wires": []
    },
    {
        "id": "61cc2ca6290c791b",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1360,
        "wires": []
    },
    {
        "id": "31bfcb0dee7f8219",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "msg to email",
        "func": "const nodeUrl = env.get(\"nodeUrl\");\n// const nodeUrl = \"https://nodered-63735d50fd02061100000009.ubos.tech\";\nconst url = `${nodeUrl}/queryToResetPassword?token=${msg.token}`;\nconst text = `\n<div style=\"padding: 10px 0; color: black;\">\n    <h1>We received a request to reset your password</h1>\n    <p>Use the link below to set up a new password for your account. If you did not request to reset your password, ignore this email and the link will expire on its own.</p>\n    <a href=\"${url}\" target=\"_blank\" style=\"margin: 10px 0; display: inline-block; padding: 16px 36px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; color: #ffffff; text-decoration: none; border-radius: 6px; background: #2E3D49;\">\n        SET NEW PASSWORD\n    </a>\n</div>\n`;\n\n// msg.to = 'daniil12.com13@gmail.com';\nmsg.to = msg.oldpayload.email;\nmsg.topic = 'Reset password';\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 1930,
        "y": 1440,
        "wires": [
            [
                "b98aad5c121b56ca",
                "3d7f4c4a497101db",
                "04b1dfc6c3223df0"
            ]
        ]
    },
    {
        "id": "d39a499fb4f07204",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1960,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "3d7f4c4a497101db",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2150,
        "y": 1480,
        "wires": []
    },
    {
        "id": "04b1dfc6c3223df0",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "finish sendEmailForResetPassword",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 1400,
        "wires": []
    },
    {
        "id": "72a62512dcfc1c80",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "resetPassword",
        "url": "/resetPassword",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 880,
        "y": 1840,
        "wires": [
            [
                "c8bd5a0cd5413a4a",
                "841413557ac17222"
            ]
        ],
        "icon": "font-awesome/fa-edit"
    },
    {
        "id": "c8bd5a0cd5413a4a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "came resetPassword",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1800,
        "wires": []
    },
    {
        "id": "841413557ac17222",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "func": "msg.newPassword = msg.payload.password;\n\nmsg.collection = \"admins\";\nmsg.payload = {\n    resetPassToken: msg.payload.token\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1840,
        "wires": [
            [
                "6716be78ab633ccf"
            ]
        ]
    },
    {
        "id": "6716be78ab633ccf",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1270,
        "y": 1840,
        "wires": [
            [
                "3412a8d7b1dda632",
                "307c7741262993fe"
            ]
        ]
    },
    {
        "id": "307c7741262993fe",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query update pass",
        "func": "const dateNow = new Date().getTime();\nlet check = await bcrypt.compare(msg.newPassword, msg.payload[0].password);\nlet encryptedPassword = await bcrypt.hash(msg.newPassword, 10);\n\nmsg.oldpayload = msg.payload;\n\nif (msg.payload[0].resetPassExpireToken < dateNow) {\n\n    msg.payload = '<h1>link expired</h1>';\n\n} else {\n\n    if (!!check) {\n\n        msg.statusCode = 401;\n        msg.payload = {\n            data: 'The password must be different from the previous one',\n            code: 401\n        }\n\n        return [null, msg];\n\n    } else {\n        \n        msg.collection = \"admins\";\n        msg.query = {\n            _id: objectid(msg.payload[0]._id)\n        }\n        msg.payload = {\n            $set: {\n                password: encryptedPassword,\n                resetPassToken: \"\",\n                resetPassExpireToken: null\n            }\n        }\n        \n        return [msg, null];\n\n    }\n\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            },
            {
                "var": "objectid",
                "module": "objectid"
            },
            {
                "var": "bcrypt",
                "module": "bcrypt"
            }
        ],
        "x": 1470,
        "y": 1840,
        "wires": [
            [
                "97c1a790a19c4ef3",
                "e3c0bf980a4c9cd4",
                "269171f2f476c5e6"
            ],
            [
                "88616445e8de6eac"
            ]
        ]
    },
    {
        "id": "3412a8d7b1dda632",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "res db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1800,
        "wires": []
    },
    {
        "id": "97c1a790a19c4ef3",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "query to db",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 1760,
        "wires": []
    },
    {
        "id": "e3c0bf980a4c9cd4",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "msg to email",
        "func": "const uiUrl = env.get(\"uiUrl\");\nconst url = `${uiUrl}/Login`;\nconst dateChanged = new Date().toString().slice(0, 24);\nconst text = `\n<div style=\"padding: 10px 0; color: black;\" display: block;>\n    <img src=\"https://www.iconpacks.net/icons/2/free-icon-check-mark-3280.png\"; alt=\"Success Icon\"; width=90px; height=90px;>\n    <h1 text-align=\"center\" >Password changed!</h1>\n    <p>\n        Your password has been changed successfully. \n        This is a confirmation that your password was changed at <b>${dateChanged}</b>\n        <br><br>\n        Use your new password to log in.\n    </p>\n    <a href=\"${url}\" target=\"_blank\" style=\"margin: 10px 0; display: inline-block; padding: 16px 36px; font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif; font-size: 16px; color: #ffffff; text-decoration: none; border-radius: 6px; background: #72D393;\">\n        <b>LOGIN NOW</b>\n    </a>\n</div>\n`;\n\n// msg.to = 'daniil12.com13@gmail.com';\nmsg.to = msg.oldpayload[0].email;\nmsg.topic = 'Password changed';\nmsg.payload = text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 1670,
        "y": 1840,
        "wires": [
            [
                "83c5f5997506bf6e",
                "b4b76b4fa0d2a3ee",
                "a731e3fff05e7cb7"
            ]
        ]
    },
    {
        "id": "269171f2f476c5e6",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1680,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b76b4fa0d2a3ee",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "finish sendEmailForResetPassword",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a731e3fff05e7cb7",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1870,
        "y": 1840,
        "wires": []
    },
    {
        "id": "acb942bcf42b27f9",
        "type": "e-mail",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1470,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8df30c180dc09f6",
        "type": "e-mail",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "b98aad5c121b56ca",
        "type": "e-mail",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2190,
        "y": 1440,
        "wires": []
    },
    {
        "id": "83c5f5997506bf6e",
        "type": "e-mail",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "22d8ee141693692a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "came",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "a9244022229cb17a",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "\"deleted\": true",
        "func": "msg.collection = \"admin_modules\";\n\nmsg.query = {\n    \"_id\": objectid(msg.payload._id)\n};\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 360,
        "y": 2500,
        "wires": [
            [
                "c394bcacc9b73e57",
                "d66b977ce5882f9d"
            ]
        ]
    },
    {
        "id": "084580649fe5ecd0",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "url": "/deleteModule",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2520,
        "wires": [
            [
                "a9244022229cb17a",
                "3a009ed63bba4b7b",
                "22d8ee141693692a",
                "0db1c7bf35954f09"
            ]
        ]
    },
    {
        "id": "c394bcacc9b73e57",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "finsih parent delete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2500,
        "wires": []
    },
    {
        "id": "d66b977ce5882f9d",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 560,
        "y": 2500,
        "wires": [
            [
                "c394bcacc9b73e57"
            ]
        ]
    },
    {
        "id": "3a009ed63bba4b7b",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "delete using pull",
        "func": "msg.collection = \"admin_roles\"\n\nmsg.query = {\n    \"permissions.moduleId\": objectid(msg.payload._id)\n}\n\nmsg.payload =\n    { $pull: { \"permissions\": { \"moduleId\": objectid(msg.payload._id) } } }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 360,
        "y": 2540,
        "wires": [
            [
                "4c756ef0ead4504a",
                "98f1682f6ed44382"
            ]
        ]
    },
    {
        "id": "4c756ef0ead4504a",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "finish childs delete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2540,
        "wires": []
    },
    {
        "id": "0db1c7bf35954f09",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 2520,
        "wires": []
    },
    {
        "id": "98f1682f6ed44382",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 560,
        "y": 2540,
        "wires": [
            [
                "4c756ef0ead4504a"
            ]
        ]
    },
    {
        "id": "cbe0a9f5e6de7aa4",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "update roles",
        "func": "msg.collection = \"admin_roles\";\n\nmsg.query = {\n    \"permissions.moduleId\": objectid(msg.payload._id)\n    }\n\nmsg.payload = {\n    $set: {\n        \"permissions.$.module\": msg.payload.name\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 330,
        "y": 2340,
        "wires": [
            [
                "1a9fe094cd5c3ea9",
                "f3501049bb0baefa"
            ]
        ]
    },
    {
        "id": "3648a7422ea4a581",
        "type": "http in",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "updateParentModule",
        "url": "/updateParentModule",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2360,
        "wires": [
            [
                "4ba104a2bbef2a2f",
                "cbe0a9f5e6de7aa4",
                "6a904b384e8e2848"
            ]
        ],
        "icon": "font-awesome/fa-edit"
    },
    {
        "id": "1a9fe094cd5c3ea9",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "finish",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2340,
        "wires": []
    },
    {
        "id": "f3501049bb0baefa",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "6a904b384e8e2848",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 2360,
        "wires": []
    },
    {
        "id": "4ba104a2bbef2a2f",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "update parent",
        "func": "msg.collection = \"admin_modules\";\n\nmsg.query = {\n    _id: objectid(msg.payload._id)\n};\n\nmsg.payload = {\n    $set: {\n        icon: msg.payload.icon,\n        position: msg.payload.position,\n        name: msg.payload.name\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 2380,
        "wires": [
            [
                "8685d6db8cb46830",
                "e8683d8140d00162"
            ]
        ]
    },
    {
        "id": "8685d6db8cb46830",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "e8683d8140d00162",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "e40cd5b49cc158cd",
        "name": "finish",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 2380,
        "wires": []
    },
    {
        "id": "88616445e8de6eac",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "same pasword",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1900,
        "wires": [
            [
                "863c310e42e64f4f"
            ]
        ]
    },
    {
        "id": "863c310e42e64f4f",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "g": "dc9a848081703c6d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1850,
        "y": 1900,
        "wires": []
    },
    {
        "id": "51f924c149db6bc5",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 160,
        "wires": []
    },
    {
        "id": "2fb628524fac30b1",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "name": "err login",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "169821c651177a1b",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 500,
        "wires": []
    },
    {
        "id": "f9b36cc9731089d9",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "name": "err register",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 540,
        "wires": []
    },
    {
        "id": "d61479a1381fffef",
        "type": "http response",
        "z": "9cd5b0a57706b2b1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1370,
        "y": 1500,
        "wires": []
    },
    {
        "id": "5b791cd411f92e64",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "name": "err register",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e1aa276151b836b3",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 880,
        "y": 500,
        "wires": [
            [
                "1864c6ccfea89c11"
            ]
        ]
    },
    {
        "id": "a0c273e05c7026c7",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "name": "menu grouping",
        "func": "msg.payload = msg.payload[0];\nmsg.permissions = msg.payload.permissions;\n\nfunction sortByPositionNumber(arr) {\n    return arr.sort((a, b) => +a.position - +b.position);\n}\n\nmsg.menu = sortByPositionNumber(msg.payload.menu).map(el => {\n\n    if (el.isParent) {\n        return {\n            \"label\": el.name,\n            \"value\": el.name,\n            \"icon\": el.icon ? el.icon : \"\",\n            \"children\": el.childModules.length \n                ? sortByPositionNumber(el.childModules)\n                  .map(item => ({\n                      \"label\": item.name,\n                      \"value\": item.name,\n                      \"icon\": item.icon ? item.icon : \"\"\n                  })) \n                : []\n        }\n    } else {\n        return {\n            \"label\": el.name,\n            \"value\": el.name,\n            \"children\": [],\n            \"icon\": el.icon ? el.icon : \"\",\n        }\n    }\n    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 820,
        "wires": [
            [
                "4b3f7f29e79aed89",
                "cdd220b2662e94d6"
            ]
        ]
    },
    {
        "id": "4b3f7f29e79aed89",
        "type": "function",
        "z": "9cd5b0a57706b2b1",
        "name": "check user permissions",
        "func": "const pageName = msg.check.page_id.replace('%20', ' ');\n\nconst parentPage = msg.menu.map((el) => el.label).includes(pageName);\nconst childPage = msg.menu.filter((e) => e.children.length > 0).flatMap((el) => el.children).map((elem) => elem.label).includes(pageName);\n\nif (parentPage || childPage) {\n\n    msg.statusCode = 200;\n    msg.payload = {\n        auth: \"Success\",\n        code: 200,\n        user: {\n            \"menu\": msg.menu,\n            \"permission\": msg.permissions,\n            \"translation\": msg.payload.translation[0],\n            \"info\": msg.user\n        }\n    }\n\n} else {\n\n    msg.payload = {\n        auth: \"Unautorizate\",\n        code: 401,\n        login_id: msg.menu[0].value + `?pageName=${msg.menu[0].value}`,\n        app_id: msg.check.app_id\n    }\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 820,
        "wires": [
            [
                "bb34e85be9dfdf2b",
                "20901ef99b84969c"
            ]
        ]
    },
    {
        "id": "cdd220b2662e94d6",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "name": "menu grouping",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 780,
        "wires": []
    },
    {
        "id": "1e05c474cfc43cdb",
        "type": "debug",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "to BD",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 740,
        "wires": []
    },
    {
        "id": "42b1e7124725fbdd",
        "type": "link call",
        "z": "9cd5b0a57706b2b1",
        "g": "bd54eb82c38ce9f8",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1230,
        "y": 820,
        "wires": [
            [
                "a0c273e05c7026c7"
            ]
        ]
    },
    {
        "id": "52de254246596310",
        "type": "http in",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "url": "/createCategory",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "e79674f19b77c282"
            ]
        ]
    },
    {
        "id": "e79674f19b77c282",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "create category",
        "func": "msg.collection = \"category\";\n\nmsg.payload = {\n    ...msg.payload,\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "e0d56b2b33581a9b"
            ]
        ]
    },
    {
        "id": "e0d56b2b33581a9b",
        "type": "link call",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "822ce0d907e8a47f"
            ]
        ]
    },
    {
        "id": "adc6ed0ac56c2e80",
        "type": "http response",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "89a056e68c47717b",
        "type": "http in",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "url": "/getCategory",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "2db939b7ecb4e147"
            ]
        ]
    },
    {
        "id": "2db939b7ecb4e147",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "get category",
        "func": "msg.collection = \"category\";\n\nmsg.payload = {\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "b1a326bef6de85b0"
            ]
        ]
    },
    {
        "id": "b1a326bef6de85b0",
        "type": "link call",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "e2cfa154f52adec1"
            ]
        ]
    },
    {
        "id": "f533d787bab2758b",
        "type": "http response",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "e2cfa154f52adec1",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "function 273",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "f533d787bab2758b"
            ]
        ]
    },
    {
        "id": "822ce0d907e8a47f",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "adc6ed0ac56c2e80"
            ]
        ]
    },
    {
        "id": "e8784981902955ca",
        "type": "http in",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "url": "/updateCategory",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "5b06a4f669229aa4"
            ]
        ]
    },
    {
        "id": "5b06a4f669229aa4",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "update category",
        "func": "msg.collection = \"category\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "9c7f37851ae71f0a"
            ]
        ]
    },
    {
        "id": "9c7f37851ae71f0a",
        "type": "link call",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "bad66048564bc971"
            ]
        ]
    },
    {
        "id": "4258848c4e78d139",
        "type": "http response",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "bad66048564bc971",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 320,
        "wires": [
            [
                "4258848c4e78d139"
            ]
        ]
    },
    {
        "id": "58501c79db8bae62",
        "type": "http in",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "url": "/deleteCategory",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "8fbdf4d21a51a4fb"
            ]
        ]
    },
    {
        "id": "8fbdf4d21a51a4fb",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "update category",
        "func": "msg.collection = \"category\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "aa012bee322e7ed7"
            ]
        ]
    },
    {
        "id": "aa012bee322e7ed7",
        "type": "link call",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 400,
        "wires": [
            [
                "3d130a34ed3601a6"
            ]
        ]
    },
    {
        "id": "ffbf097799d438d2",
        "type": "http response",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "3d130a34ed3601a6",
        "type": "function",
        "z": "69a674d8a35c2ffc",
        "g": "eb81c6a999181cf5",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "ffbf097799d438d2"
            ]
        ]
    },
    {
        "id": "9d05114a0cc8d2a0",
        "type": "http in",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "url": "/createWarehouse",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "14b08350a0655bdc"
            ]
        ]
    },
    {
        "id": "14b08350a0655bdc",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "create category",
        "func": "msg.collection = \"warehouse\";\n\nmsg.payload = {\n    ...msg.payload,\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "4ed95915529b8e62"
            ]
        ]
    },
    {
        "id": "4ed95915529b8e62",
        "type": "link call",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "7ec481cd3cd330fd"
            ]
        ]
    },
    {
        "id": "b7dbd9517728a90f",
        "type": "http response",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "b1b610ce5dac6ebb",
        "type": "http in",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "url": "/getWarehouses",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "a8f2d921bc6af310"
            ]
        ]
    },
    {
        "id": "a8f2d921bc6af310",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "get category",
        "func": "msg.collection = \"warehouse\";\nlet match = {};\n\nif (msg.req.query.warehouse  && msg.req.query.warehouse !== \"\" && msg.req.query.warehouse !== \"undefined\") {\n    match.warehouse = msg.req.query.warehouse\n}\nmsg.payload = {\n    deleted: false,\n    ...match\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "cf7f02c0f6a9ae5c"
            ]
        ]
    },
    {
        "id": "cf7f02c0f6a9ae5c",
        "type": "link call",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "ccaf18ee79d25ed9"
            ]
        ]
    },
    {
        "id": "c6169e633ad1da51",
        "type": "http response",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "ccaf18ee79d25ed9",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "function 274",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "c6169e633ad1da51"
            ]
        ]
    },
    {
        "id": "7ec481cd3cd330fd",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 140,
        "wires": [
            [
                "b7dbd9517728a90f"
            ]
        ]
    },
    {
        "id": "0357496d780a01e3",
        "type": "http in",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "url": "/updateWarehouse",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "abf8e62e80bea95a"
            ]
        ]
    },
    {
        "id": "abf8e62e80bea95a",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "update category",
        "func": "msg.collection = \"warehouse\";\n\nmsg.query = {\n  _id: objectid(msg.req.query._id)\n\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n     $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "60f59e84f560fd91"
            ]
        ]
    },
    {
        "id": "60f59e84f560fd91",
        "type": "link call",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "339f336b8643b2c4"
            ]
        ]
    },
    {
        "id": "187b95956d6c6195",
        "type": "http response",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "339f336b8643b2c4",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "187b95956d6c6195"
            ]
        ]
    },
    {
        "id": "99919d690731809a",
        "type": "http in",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "url": "/deleteWarehouse",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "cb4a12f1bd6bb31a"
            ]
        ]
    },
    {
        "id": "cb4a12f1bd6bb31a",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "update category",
        "func": "msg.collection = \"warehouse\";\n\nmsg.query = {\n    _id: objectid(msg.req.query._id)\n}\n\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "2460c5e67f79f69c"
            ]
        ]
    },
    {
        "id": "2460c5e67f79f69c",
        "type": "link call",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 580,
        "y": 380,
        "wires": [
            [
                "dbc6432e47eab8ae"
            ]
        ]
    },
    {
        "id": "630fb596b6612380",
        "type": "http response",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "dbc6432e47eab8ae",
        "type": "function",
        "z": "9266a34f77126904",
        "g": "a621f922ccda4904",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "630fb596b6612380"
            ]
        ]
    },
    {
        "id": "dee050e853d4f54a",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/getCatalogSku",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "205856744efb25ca"
            ]
        ]
    },
    {
        "id": "205856744efb25ca",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "filter deleted = false",
        "func": "msg.collection = \"catalog\";\n\nmsg.payload = {\n    deleted: false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 80,
        "wires": [
            [
                "ffa29670689660e6"
            ]
        ]
    },
    {
        "id": "ffa29670689660e6",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "215118a7957c6616"
            ]
        ]
    },
    {
        "id": "d319c196ca6525f9",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "215118a7957c6616",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 277",
        "func": "msg.payload = msg.payload.map(e=> {\n    return {\n     _id:  e._id,\n     sku:  e.sku\n    }\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "d319c196ca6525f9"
            ]
        ]
    },
    {
        "id": "471ba71e03281c58",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "get users query",
        "func": "msg.collection = \"admins\";\n\nmsg.payload = {\n  deleted: false,\n  position: {$exists:true}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "aab7779b02aabf66"
            ]
        ]
    },
    {
        "id": "ddf051d7e9cc48d0",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/getUsersIng",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "471ba71e03281c58"
            ]
        ]
    },
    {
        "id": "aab7779b02aabf66",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 160,
        "wires": [
            [
                "e712401cbc6c3c22"
            ]
        ]
    },
    {
        "id": "719f14d1d2dca419",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "e712401cbc6c3c22",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 278",
        "func": "msg.payload = msg.payload.map(e=> {\n    return {\n        name: `${e.firstname}  ${e.lastname}`,\n        _id: e._id\n    }\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 160,
        "wires": [
            [
                "719f14d1d2dca419"
            ]
        ]
    },
    {
        "id": "f722818c3f6f8fa7",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/getComponentsForHistory",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "6828054d74dc0133"
            ]
        ]
    },
    {
        "id": "61efdc4a5f49e349",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "get component",
        "func": "msg.collection = \"components\";\n\n\n\n\n\n\nmsg.payload = [\n    {\n        $match:{\n            \"deleted\": false,\n            \"_id\":{$in: msg.arrayId}\n       }\n    },\n    {\n        $lookup: {\n            from: \"category\",\n            localField: \"category\",\n            foreignField: \"_id\",\n            as: \"category_info\"\n        }\n    },\n    {\n        $lookup: {\n            from: \"componentsBox\",\n            localField: \"box\",\n            foreignField: \"_id\",\n            as: \"box_info\"\n        }\n    },\n\n   \n];\n\n\n\n\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 600,
        "y": 260,
        "wires": [
            [
                "2e5458beb81bcf57"
            ]
        ]
    },
    {
        "id": "2e5458beb81bcf57",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "636aec98e6017190"
            ]
        ]
    },
    {
        "id": "382a21ef309ef032",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "636aec98e6017190",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 279",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "382a21ef309ef032"
            ]
        ]
    },
    {
        "id": "6828054d74dc0133",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 280",
        "func": "// let component = msg.payload._id\n//  msg.arrayId = component.map(e=> objectid(e))\n// return msg;\n\n\n\nif (msg.payload._id !== null && msg.payload._id !== undefined) {\n    let component = msg.payload._id\n    msg.arrayId = component.map(e => objectid(e))\n    return [null, msg];\n}\nelse {\n\n    msg.payload = {\n        success: false,\n        payload: {}\n    }\n    return [msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 445,
        "y": 260,
        "wires": [
            [
                "aca2aa51ba48c8b9"
            ],
            [
                "61efdc4a5f49e349"
            ]
        ],
        "l": false
    },
    {
        "id": "e194e8e72212011a",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/getHistory",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "ba16f54773c01e6d"
            ]
        ]
    },
    {
        "id": "1432a9b75376fe5f",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "dc503760df85f511"
            ]
        ]
    },
    {
        "id": "dc503760df85f511",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "ba16f54773c01e6d",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "to BD",
        "func": "msg.collection = \"history\"\nlet match = {};\n\nmsg.payload = [\n    {\n        $match: {\n            \"deleted\": false,\n            ...match\n        }\n    },\n    {\n        $lookup: {\n            from: \"admins\",\n            localField: \"engineer\",\n            foreignField: \"_id\",\n            as: \"engineer\"\n        }\n    },\n    {\n        $project: {\n            _id: 1,\n            sku: 1,\n            typeRepair: 1,\n            engineer: 1,\n            components: 1,\n            description: 1,\n            createdAt: 1,\n            dateFinish: 1,\n            deleted: 1,\n          \n        }\n    }\n        \n  \n];\n return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 390,
        "y": 460,
        "wires": [
            [
                "1432a9b75376fe5f"
            ]
        ]
    },
    {
        "id": "d99f468a0d2cd988",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/createRepair",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "fd7a6e50b798f526"
            ]
        ]
    },
    {
        "id": "870721350ee6acb8",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "808d0a67b4acc839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 560,
        "wires": [
            [
                "8a7ea9168c0d7023",
                "1fd8d77347ddad22"
            ]
        ]
    },
    {
        "id": "fd7a6e50b798f526",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "create new",
        "func": "msg.collection = \"history\"\n\n\nmsg.payload = {\n    \"sku\": msg.payload.sku,\n    \"typeRepair\": msg.payload.typeRepair,\n    \"engineer\": objectid(msg.payload.engineer),\n    \"description\": msg.payload.description,\n    \"createdAt\": msg.payload.createdAt,\n        deleted: false\n}\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "870721350ee6acb8"
            ]
        ]
    },
    {
        "id": "8a7ea9168c0d7023",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 520,
        "wires": []
    },
    {
        "id": "b296fdd39543419f",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1220,
        "y": 560,
        "wires": [
            [
                "04803aa199c59834"
            ]
        ]
    },
    {
        "id": "4714a2ba2fbcfc52",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "Update query",
        "func": "msg.collection = \"catalog\"\n\nmsg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: {\n        status: msg.forBase.typeRepair\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "b296fdd39543419f"
            ]
        ]
    },
    {
        "id": "1fd8d77347ddad22",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 285",
        "func": "msg.forBase =msg.payload\nmsg.collection = \"catalog\"\nmsg.payload = {\n\"sku\":msg.payload.sku,\ndeleted:false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 560,
        "wires": [
            [
                "5c7418115f28bd81"
            ]
        ]
    },
    {
        "id": "5c7418115f28bd81",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 885,
        "y": 560,
        "wires": [
            [
                "4714a2ba2fbcfc52"
            ]
        ],
        "l": false
    },
    {
        "id": "702a61f1355c2bbe",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/updateRepair",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "60841b65e7dfee98",
                "4ab5e5f830c1ff99"
            ]
        ]
    },
    {
        "id": "60841b65e7dfee98",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 286",
        "func": "msg.collection = \"history\"\nmsg.query = {\n    _id: objectid(msg.payload._id)\n}\nconst transformedComponent = msg.payload.component ? msg.payload.component.map(obj => {\n     node.warn(obj)\n    const [id, { amount, article, name,price}] = Object.entries(obj)[0];\n    return { id: objectid(id), amount, article, name,price};\n}) : \"\";\nmsg.fromApp = {\n        \"sku\": msg.payload.sku,\n        \"typeRepair\": msg.payload.typeRepair,\n        \"components\": transformedComponent,\n    }\n\nmsg.payload = {\n    $set:{\n    \"sku\": msg.payload.sku,\n    \"typeRepair\": msg.payload.typeRepair,\n    \"engineer\": objectid(msg.payload.engineer),\n    \"components\": transformedComponent,\n    \"description\": msg.payload.description,\n    \"dateFinish\": msg.payload.dateFinish,\n}\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "140662385ecd4ee5",
                "213eb5165695eb0e",
                "4ab5e5f830c1ff99"
            ]
        ]
    },
    {
        "id": "140662385ecd4ee5",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 620,
        "y": 680,
        "wires": [
            [
                "bf57d719eebbfec6",
                "213eb5165695eb0e"
            ]
        ]
    },
    {
        "id": "213eb5165695eb0e",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 287",
        "func": "msg.array = msg.fromApp.components\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 720,
        "wires": [
            [
                "cb3325741dcf2be4"
            ]
        ]
    },
    {
        "id": "7b9f3823d106754b",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1150,
        "y": 840,
        "wires": [
            [
                "c6e3504cf9435020",
                "cb3325741dcf2be4"
            ]
        ]
    },
    {
        "id": "67e2e7aa8903d7a9",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/getSingleRepair",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 360,
        "wires": [
            [
                "dd8041a5224b1478"
            ]
        ]
    },
    {
        "id": "dd8041a5224b1478",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 288",
        "func": "\nif (msg.req.query._id !== \"null\" && msg.req.query._id !== \"undefined\") {\n   msg.collection = \"history\";\n\n    msg.payload = {\n        \"_id\": objectid(msg.payload._id)\n    }\n    return [null, msg];\n}\nelse {\n\n    msg.payload = {\n        success: false,\n        payload: {}\n    }\nreturn [msg, null]}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 410,
        "y": 360,
        "wires": [
            [
                "f4bf7c1ef43c32b6"
            ],
            [
                "4bcf6b1926d6d213"
            ]
        ]
    },
    {
        "id": "4bcf6b1926d6d213",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 595,
        "y": 380,
        "wires": [
            [
                "314760e07b267ef2"
            ]
        ],
        "l": false
    },
    {
        "id": "f4bf7c1ef43c32b6",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "314760e07b267ef2",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 380,
        "wires": []
    },
    {
        "id": "aca2aa51ba48c8b9",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "7f76ad730d7b21ca",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1300,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "322eacba9bf22479",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "Update query",
        "func": "msg.collection = \"catalog\"\n\nmsg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: {\n        status: \"готове\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1080,
        "y": 640,
        "wires": [
            [
                "7f76ad730d7b21ca"
            ]
        ]
    },
    {
        "id": "bf57d719eebbfec6",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 289",
        "func": "msg.collection = \"catalog\"\nmsg.payload = {\n\"sku\":msg.fromApp.sku,\ndeleted:false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 640,
        "wires": [
            [
                "f564c777416f75a3"
            ]
        ]
    },
    {
        "id": "f564c777416f75a3",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 935,
        "y": 640,
        "wires": [
            [
                "322eacba9bf22479"
            ]
        ],
        "l": false
    },
    {
        "id": "cb3325741dcf2be4",
        "type": "array-loop",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "key": "item",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 1020,
        "y": 720,
        "wires": [
            [
                "614be722049bfa94"
            ],
            [
                "ad8760f2b201463f"
            ]
        ]
    },
    {
        "id": "ad8760f2b201463f",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 290",
        "func": "\nmsg.collection = \"components\";\nnode.warn(msg.payload)\nmsg.amount= msg.payload.amount\nmsg.payload = {\n    _id: objectid(msg.payload.id)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 950,
        "y": 840,
        "wires": [
            [
                "7b9f3823d106754b"
            ]
        ]
    },
    {
        "id": "c6e3504cf9435020",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 291",
        "func": "msg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\nlet newQuantity = msg.payload[0].quantity - msg.amount\nmsg.payload = {\n    $set: {\n        quantity: newQuantity\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1330,
        "y": 840,
        "wires": [
            [
                "4e3720d8b90b940e"
            ]
        ]
    },
    {
        "id": "4e3720d8b90b940e",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1536,
        "y": 838,
        "wires": [
            []
        ]
    },
    {
        "id": "b6fe79caf64b0533",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "url": "/deleteRepairs",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "829dbe4dbf3879e9"
            ]
        ]
    },
    {
        "id": "d1834748977f6110",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 293",
        "func": "msg.collection = \"history\"\nmsg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\nconst arr = msg.payload[0].components;\n\nmsg.fromApp = {\n        \"sku\": msg.payload[0].sku,\n        \"typeRepair\": msg.payload[0].typeRepair,\n    \"components\": arr,\n    }\n\n\nmsg.payload = {\n    $set:{\n  deleted:true\n}\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 750,
        "y": 1020,
        "wires": [
            [
                "02295e9e8a5a0b12",
                "094c5eb0bf1e763f"
            ]
        ]
    },
    {
        "id": "02295e9e8a5a0b12",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 940,
        "y": 980,
        "wires": [
            [
                "ad73f63afdeef1db",
                "094c5eb0bf1e763f"
            ]
        ]
    },
    {
        "id": "094c5eb0bf1e763f",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 294",
        "func": "\nif (msg.fromApp.components){\n    msg.array = msg.fromApp.components\n    return [msg,null]\n}else{\n    return [null, msg]\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1040,
        "wires": [
            [
                "f4f00af601ab2540"
            ],
            [
                "6da69c8ad9b8635c"
            ]
        ]
    },
    {
        "id": "d597429c893c92fd",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1490,
        "y": 1160,
        "wires": [
            [
                "404ce79dc9a21028",
                "f4f00af601ab2540",
                "5719e2aead5f696e"
            ]
        ]
    },
    {
        "id": "54deaafcd2f812ec",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1640,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "4bb66513ec5edb70",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "Update query",
        "func": "msg.collection = \"catalog\"\n\nmsg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\n\ndelete msg.payload._id\n\nmsg.payload = {\n    $set: {\n        status: \"готове\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1420,
        "y": 960,
        "wires": [
            [
                "54deaafcd2f812ec"
            ]
        ]
    },
    {
        "id": "ad73f63afdeef1db",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 295",
        "func": "msg.collection = \"catalog\"\nmsg.payload = {\n\"sku\":msg.fromApp.sku,\ndeleted:false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 960,
        "wires": [
            [
                "366c3138531ffb8a"
            ]
        ]
    },
    {
        "id": "366c3138531ffb8a",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1275,
        "y": 960,
        "wires": [
            [
                "4bb66513ec5edb70"
            ]
        ],
        "l": false
    },
    {
        "id": "f4f00af601ab2540",
        "type": "array-loop",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "key": "item",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 1360,
        "y": 1040,
        "wires": [
            [
                "cca2a7828782f219"
            ],
            [
                "8e14060ebcc6f42d"
            ]
        ]
    },
    {
        "id": "8e14060ebcc6f42d",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 296",
        "func": "\nmsg.collection = \"components\";\nnode.warn(msg.payload)\nmsg.amount= msg.payload.amount\nmsg.payload = {\n    _id: objectid(msg.payload.id)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1290,
        "y": 1160,
        "wires": [
            [
                "d597429c893c92fd",
                "5719e2aead5f696e"
            ]
        ]
    },
    {
        "id": "404ce79dc9a21028",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 297",
        "func": "msg.query = {\n    _id: objectid(msg.payload[0]._id)\n}\nlet newQuantity = msg.payload[0].quantity +( msg.amount)\nnode.warn(msg.payload[0].quantity)\nmsg.payload = {\n    $set: {\n        quantity: newQuantity\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 1670,
        "y": 1160,
        "wires": [
            [
                "30ab4d94774ebfab",
                "5719e2aead5f696e"
            ]
        ]
    },
    {
        "id": "30ab4d94774ebfab",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "8f709f233a1011b5"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1876,
        "y": 1158,
        "wires": [
            []
        ]
    },
    {
        "id": "0a0a796613de2d14",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "links": [
            "b9050c59f111a8f3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "d1834748977f6110"
            ]
        ]
    },
    {
        "id": "829dbe4dbf3879e9",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "function 298",
        "func": "msg.collection = \"history\"\nmsg.payload = {\n    _id: objectid(msg.payload._id)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "0a0a796613de2d14"
            ]
        ]
    },
    {
        "id": "6da69c8ad9b8635c",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1150,
        "y": 1100,
        "wires": []
    },
    {
        "id": "06f33af4371e0934",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 560,
        "wires": []
    },
    {
        "id": "04803aa199c59834",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 560,
        "wires": [
            [
                "06f33af4371e0934"
            ]
        ]
    },
    {
        "id": "3f9e10555f612cc9",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1310,
        "y": 720,
        "wires": []
    },
    {
        "id": "614be722049bfa94",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 720,
        "wires": [
            [
                "3f9e10555f612cc9"
            ]
        ]
    },
    {
        "id": "fb3f755470755640",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1670,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cca2a7828782f219",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "status",
        "func": "\nmsg.payload = {\n    success: true,\n    error: \"Everything is OK\"\n}\n\nmsg.statusCode = 200\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1040,
        "wires": [
            [
                "fb3f755470755640"
            ]
        ]
    },
    {
        "id": "54545193a1b83147",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "function 301",
        "func": "\n// // Перетворюємо масив елементів у масив рядків таблиці\nconst rows = msg.componets.map(item => [{ text: item.name, style: 'tableContent' }, { text: item.article, style: 'tableContent' }, { text: item.amount, style: 'tableContent' }, { text: item.price, style: 'tableContent' }, { text: item.totalPrice, style: 'tableContent' }]);\n\n// Додаємо рядки таблиці до масиву body\nconst body = [[{ text: 'Назва', style: 'tableHeader' }, { text: 'Артикул', style: 'tableHeader' }, { text: 'Кількість', style: 'tableHeader' }, { text: 'Ціна €', style: 'tableHeader' }, { text: 'Сума €', style: 'tableHeader' }],\n...rows\n];\n\n// // Оновлюємо об'єкт payload з оновленим масивом body\n// msg.payload = {\n//     content: [\n//         { text: 'Акт виконаних робіт', style: 'header' },\n//         { text: `Обладнання: ${msg.payload.items}` },\n//         { text: `Sku: ${msg.payload.Sku}` },\n//         { text: `Комплектація: ${msg.payload.complection}` },\n//         { text: `Зовнішній стан: ${msg.payload.looks}` },\n//         { text: `Зауваження та заключення: ${msg.payload.moreInfo}` },\n//         { text: `Клієнт: ${msg.payload.client}` },\n//         {\n//             style: 'tableStyle',\n//             table: {\n//                 headerRows: 1,\n//                 widths: ['*', '*', '*', '*', '*'],\n//                 body: body\n//             }\n//         }\n//     ],\n//     styles: {\n//         header: {\n//             fontSize: 18,\n//             bold: true,\n//             margin: [0, 0, 0, 10]\n//         },\n//         tableStyle: {\n//             margin: [0, 10, 0, 10]\n//         },\n//         tableHeader: {\n//             fontSize: 12,\n//             bold: true,\n//             fillColor: '#eee',\n//             margin: [0, 2, 0, 2]\n//         },\n//         tableContent: {\n//             fontSize: 10,\n//             margin: [0, 2, 0, 2]\n//         }\n//     }\n// };\n\n// return msg;\n// Calculate the total sum of the \"totalPrice\" column\nconst total = rows.reduce((acc, row) => acc + parseFloat(row[row.length - 1].text), 0);\n\n// Add a row to the \"body\" array with the total sum\nbody.push([{ text: 'Всього €', style: 'tableHeader' }, '', '', '', { text: total.toFixed(2), style: 'tableContent' }]);\n\n// Update the \"msg.payload\" object with the modified \"body\" array\nmsg.payload = {\n    content: [\n        { text: 'Акт виконаних робіт', style: 'header' },\n        { text: `Обладнання: ${msg.payload.items}` },\n        { text: `Sku: ${msg.payload.Sku}` },\n        { text: `Комплектація: ${msg.payload.complection}` },\n        { text: `Зовнішній стан: ${msg.payload.looks}` },\n        { text: `Зауваження та заключення: ${msg.payload.moreInfo}` },\n        { text: `Клієнт: ${msg.payload.client}` },\n        {\n            style: 'tableStyle',\n            table: {\n                headerRows: 1,\n                widths: ['*', '*', '*', '*', '*'],\n                body: body\n            }\n        }\n    ],\n    styles: {\n        header: {\n            fontSize: 18,\n            bold: true,\n            margin: [0, 0, 0, 10]\n        },\n        tableStyle: {\n            margin: [0, 10, 0, 10]\n        },\n        tableHeader: {\n            fontSize: 12,\n            bold: true,\n            fillColor: '#eee',\n            margin: [0, 2, 0, 2]\n        },\n        tableContent: {\n            fontSize: 10,\n            margin: [0, 2, 0, 2]\n        }\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1320,
        "wires": [
            [
                "c64c51f604b0effb",
                "03b0d797b2259124"
            ]
        ]
    },
    {
        "id": "3e1d576bdd9b4232",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "name": "",
        "url": "/pdf",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1320,
        "wires": [
            [
                "d9c92a6e1d5be5ec",
                "c8b11f0b7bb40860"
            ]
        ]
    },
    {
        "id": "03b0d797b2259124",
        "type": "pdfmake",
        "z": "23d2095ae5660c9d",
        "name": "",
        "outputType": "Buffer",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 700,
        "y": 1320,
        "wires": [
            [
                "46d7cd0cb846ec48"
            ]
        ]
    },
    {
        "id": "46d7cd0cb846ec48",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "function 302",
        "func": "msg.headers = {\n    \"Content-Disposition\": \"inline\",\n    // \"filename\": \"calls.pdf\",\n    'Content-Type': 'application/pdf',\n    // \"charset\": 'utf-8',\n    // \"content-transfer-encoding\": \"binary\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1320,
        "wires": [
            [
                "e4d6744093899772",
                "c64c51f604b0effb"
            ]
        ]
    },
    {
        "id": "e4d6744093899772",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d9c92a6e1d5be5ec",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "function 303",
        "func": "// msg.payload = {\n//     items: 'Лінійка виробів для кухні',\n//     Sku: 'SKU-123456',\n//     complection: 'Всі необхідні компоненти в комплекті',\n//     looks: 'Нове',\n//     moreInfo: 'Все зроблено якісно, без зауважень',\n//     client: 'Клієнтов Олександр',\n//     name1: 'Кухонний фартух',\n//     article1: 'ART-001',\n//     quantity1: 2,\n//     price1: 350,\n//     amount1: 700,\n//     name2: 'Підставка для кухонних приборів',\n//     article2: 'ART-002',\n//     quantity2: 1,\n//     price2: 150,\n//     amount2: 150,\n//     name3: 'Набір кухонних рукавичок',\n//     article3: 'ART-003',\n//     quantity3: 3,\n//     price3: 50,\n//     amount3: 150,\n// }\n\nmsg.componets= JSON.parse(msg.payload.components)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 375,
        "y": 1320,
        "wires": [
            [
                "c8b11f0b7bb40860",
                "54545193a1b83147"
            ]
        ],
        "l": false
    },
    {
        "id": "68c0515eb93b32f1",
        "type": "http in",
        "z": "23d2095ae5660c9d",
        "name": "",
        "url": "/getCatalogItemsAct",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 1440,
        "wires": [
            [
                "6d6b7a27b0f43433",
                "43d435438fbab62c"
            ]
        ]
    },
    {
        "id": "cd48fdd09a1ead89",
        "type": "link call",
        "z": "23d2095ae5660c9d",
        "name": "",
        "links": [
            "d44346ce1ee72fd9"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 1440,
        "wires": [
            [
                "e0343084d3064eed",
                "03bceb9f00fb2d6f"
            ]
        ]
    },
    {
        "id": "eeaef2cd43fb18cf",
        "type": "http response",
        "z": "23d2095ae5660c9d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 1440,
        "wires": []
    },
    {
        "id": "43d435438fbab62c",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "to BD",
        "func": "msg.collection = \"catalog\";\nlet match = {sku: msg.req.query.sku};\n\n\n\n\n\n\n\nmsg.payload = [\n    {\n        $match: {\n            \"deleted\": false,\n            ...match\n        }\n    },\n    {\n        $lookup: {\n            from: \"warehouse\",\n            localField: \"address\",\n            foreignField: \"_id\",\n            as: \"warehouse_info\"\n        }\n    },\n    {\n        $lookup: {\n            from: \"category\",\n            localField: \"category\",\n            foreignField: \"_id\",\n            as: \"category_info\"\n        }\n    }\n\n\n\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 490,
        "y": 1440,
        "wires": [
            [
                "cd48fdd09a1ead89",
                "03bceb9f00fb2d6f"
            ]
        ]
    },
    {
        "id": "e0343084d3064eed",
        "type": "function",
        "z": "23d2095ae5660c9d",
        "name": "to App",
        "func": "msg.payload = msg.payload.map(e=>{\n    return {\n        _id: e._id,\n        label: e.label,\n        model: e.model,\n        type: e.type,\n        serialNumber: e.serialNumber,\n        color: e.color,\n        sku: e.sku,\n        address: e.address,\n        category: e.category,\n        qr: e.qr,\n        more: e.more,\n        deleted: e.deleted,\n        isClient:e.isClient,\n        addressLabel: e.warehouse_info[0].warehouse,\n        addressWarehouse: e.warehouse_info[0].address,\n        categoryLabel: e.category_info[0].label,\n        status: e.status,\n        categoryName: e.category_info[0].name\n\n    }\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1440,
        "wires": [
            [
                "eeaef2cd43fb18cf",
                "03bceb9f00fb2d6f"
            ]
        ]
    },
    {
        "id": "03bceb9f00fb2d6f",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4ab5e5f830c1ff99",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "g": "d2e221eb4b881ebc",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 760,
        "wires": []
    },
    {
        "id": "6d6b7a27b0f43433",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1500,
        "wires": []
    },
    {
        "id": "c64c51f604b0effb",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c8b11f0b7bb40860",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5719e2aead5f696e",
        "type": "debug",
        "z": "23d2095ae5660c9d",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 1240,
        "wires": []
    }
]